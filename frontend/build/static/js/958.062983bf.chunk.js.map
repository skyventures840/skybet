{"version":3,"file":"static/js/958.062983bf.chunk.js","mappings":"kMAIA,MAkDA,EAlDeA,KACb,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAqBnC,OAnBAK,EAAAA,EAAAA,WAAU,KACmBC,WACzB,IACEJ,GAAW,GAEX,MAAMK,QAAiBC,EAAAA,EAAWC,gBAAgB,aAClDC,QAAQC,IAAI,2BAA4BJ,EAASK,MACjDb,EAAWQ,EAASK,KAAKd,QAC3B,CAAE,MAAOe,GACPH,QAAQP,MAAM,iCAAkCU,GAChDT,EAAS,yBACX,CAAC,QACCF,GAAW,EACb,GAGFY,IACC,IAECb,GAAgBc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,SAAC,uBACzCd,GAAcY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SAAEd,KAGxCe,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC5BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBC,SAAC,oDAGhCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,sBAC9BF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcC,SAAC,iBAGnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAC1BnB,EAAQqB,IAAIC,IACXL,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAAgBD,MAAOA,GAAjBA,EAAME,a","sources":["pages/Hockey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MatchCard from '../components/MatchCard';\nimport apiService from '../services/api';\n\nconst Hockey = () => {\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchHockeyMatches = async () => {\n      try {\n        setLoading(true);\n        // Use icehockey key instead of hockey to match the Odds API format\n        const response = await apiService.getMatchesByKey('icehockey');\n        console.log('Hockey matches response:', response.data);\n        setMatches(response.data.matches);\n      } catch (err) {\n        console.error('Error fetching hockey matches:', err);\n        setError('Failed to load matches');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchHockeyMatches();\n  }, []);\n\n  if (loading) return <div className=\"loading\">Loading matches...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"sport-page\">\n      <div className=\"sport-header\">\n        <h1 className=\"sport-title\">Field Hockey</h1>\n        <p className=\"sport-subtitle\">Bet on field hockey leagues and tournaments</p>\n      </div>\n\n      <div className=\"matches-section\">\n        <div className=\"section-header\">\n          <h2 className=\"section-title\">UPCOMING MATCHES</h2>\n          <button className=\"view-all-btn\">View All</button>\n        </div>\n\n        <div className=\"matches-grid\">\n          {matches.map(match => (\n            <MatchCard key={match.id} match={match} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hockey;"],"names":["Hockey","matches","setMatches","useState","loading","setLoading","error","setError","useEffect","async","response","apiService","getMatchesByKey","console","log","data","err","fetchHockeyMatches","_jsx","className","children","_jsxs","map","match","MatchCard","id"],"sourceRoot":""}