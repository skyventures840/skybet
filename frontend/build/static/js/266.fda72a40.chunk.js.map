{"version":3,"file":"static/js/266.fda72a40.chunk.js","mappings":"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","sources":["../node_modules/qrcode/lib/core/format-info.js","../node_modules/qrcode/lib/core/numeric-data.js","../node_modules/qrcode/lib/core/galois-field.js","../node_modules/qrcode/lib/core/polynomial.js","../node_modules/qrcode.react/lib/esm/index.js","../node_modules/qrcode/lib/core/segments.js","../node_modules/qrcode/lib/core/error-correction-code.js","../node_modules/js-sha3/src/sha3.js","../node_modules/qrcode/lib/renderer/canvas.js","../node_modules/qrcode/lib/core/version-check.js","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/qrcode/lib/core/bit-buffer.js","../node_modules/qrcode/lib/core/bit-matrix.js","../node_modules/qrcode/lib/core/qrcode.js","../node_modules/qrcode/lib/core/mask-pattern.js","../node_modules/qrcode/lib/core/version.js","../node_modules/qrcode/lib/core/kanji-data.js","../node_modules/qrcode/lib/renderer/svg-tag.js","../node_modules/qrcode/lib/can-promise.js","../node_modules/qrcode/lib/core/error-correction-level.js","../node_modules/bn.js/lib/bn.js","../node_modules/dijkstrajs/dijkstra.js","../node_modules/qrcode/lib/core/mode.js","../node_modules/qrcode/lib/core/utils.js","../node_modules/qrcode/lib/core/reed-solomon-encoder.js","../node_modules/qrcode/lib/renderer/utils.js","../node_modules/qrcode/lib/core/regex.js","../node_modules/qrcode/lib/core/byte-data.js","../node_modules/qrcode/lib/browser.js","../node_modules/qrcode/lib/core/finder-pattern.js","../node_modules/qrcode/lib/core/alignment-pattern.js","../node_modules/qrcode/lib/core/alphanumeric-data.js"],"sourcesContent":["const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = React.useRef(null);\n  const _image = React.useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  React.useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.8.0\";\n","export const version = \"bytes/5.8.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bignumber/5.8.0\";\n","export const version = \"address/5.8.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","const Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    this.data = new TextEncoder().encode(data)\n  } else {\n    this.data = new Uint8Array(data)\n  }\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n"],"names":["Utils","require","G15_BCH","getBCHDigit","exports","getEncodedBits","errorCorrectionLevel","mask","data","bit","d","Mode","NumericData","this","mode","NUMERIC","toString","getBitsLength","length","Math","floor","prototype","getLength","write","bitBuffer","i","group","value","substr","parseInt","put","remainingNum","module","EXP_TABLE","Uint8Array","LOG_TABLE","x","log","n","Error","exp","mul","y","GF","p1","p2","coeff","j","mod","divident","divisor","result","offset","slice","generateECPolynomial","degree","poly","qrcodegen","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","qrcodegen2","_QrCode","constructor","version","dataCodewords","msk","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","size","row","push","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","encodeText","text","ecl","segs","QrSegment","makeSegments","encodeSegments","encodeBinary","seg","makeBytes","dataUsedBits","minVersion","arguments","undefined","maxVersion","boostEcl","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","forEach","getModule","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","block","right","vert","invert","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","root","reedSolomonMultiply","map","_","factor","shift","coef","z","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","BYTE","makeNumeric","digits","isNumeric","makeAlphanumeric","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","toUtf8ByteArray","makeEci","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","props","_a","level","bgColor","fgColor","style","otherProps","imgSrc","src","_canvas","React","_image","isImgLoaded","setIsImageLoaded","current","canvas","ctx","getContext","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","display","onLoad","ref","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","shapeRendering","QRCode","renderAs","AlphanumericData","ByteData","KanjiData","Regex","dijkstra","getStringByteLength","unescape","encodeURIComponent","getSegments","regex","segments","exec","index","getSegmentsFromString","dataStr","numSegs","alphaNumSegs","byteSegs","kanjiSegs","isKanjiModeEnabled","BYTE_KANJI","sort","s1","s2","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","getBestModeForData","from","fromArray","array","acc","fromString","nodes","buildNodes","graph","table","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","getCharCountIndicator","end","buildGraph","path","find_path","optimizedSegs","curr","prevSeg","mergeSegments","rawSplit","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","getTotalCodewordsCount","INPUT_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","self","JS_SHA3_NO_NODE_JS","process","versions","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","define","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","split","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","Array","isArray","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","padding","outputType","message","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","s","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","type","create","algorithms","name","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","reset","finalized","blockCount","byteCount","outputBlocks","extraBytes","notString","code","lastByteIndex","f","encode","o","bytes","encodeString","strs","paddingBytes","zeros","finalize","hex","arrayBuffer","Uint32Array","digest","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","render","qrData","options","opts","canvasEl","document","createElement","getCanvasElement","getOptions","getImageWidth","createImageData","qrToImageData","clearRect","clearCanvas","putImageData","renderToDataURL","rendererOpts","toDataURL","quality","isValid","isNaN","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","_normalizeError","missing","form","normalize","String","fromCharCode","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","_log","logLevel","args","toLowerCase","throwArgumentError","console","apply","_len","_key","levels","DEBUG","_len2","_key2","INFO","warn","_len3","_key3","WARNING","makeError","params","errors","UNKNOWN_ERROR","messageDetails","keys","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","kind","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","logger","isHexable","toHexString","addSlice","isInteger","isBytes","v","arrayify","allowMissingPrefix","substring","isHexString","hexPad","match","BN","_BN","getChecksumAddress","address","chars","expanded","hashed","sha3","toUpperCase","ibanLookup","safeDigits","log10","LN10","ibanChecksum","c","checksum","getAddress","BitBuffer","get","bufIndex","num","putBit","getLengthInBits","BitMatrix","reservedBit","set","col","reserved","xor","isReserved","AlignmentPattern","FinderPattern","MaskPattern","ECCode","ReedSolomonEncoder","Version","FormatInfo","Segments","setupFormatInfo","matrix","maskPattern","createData","dataTotalCodewordsBits","getSymbolTotalCodewords","remainingByte","totalCodewords","ecTotalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup2","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","r","createCodewords","createSymbol","estimatedVersion","rawSegments","getBestVersionForData","bestVersion","dataBits","moduleCount","getSymbolSize","getPositions","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","inc","bitIndex","byteIndex","setupData","getBestMask","bind","toSJISFunc","setToSJISFunction","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","pattern","setupFormatFunc","numPatterns","bestPattern","lowerPenalty","p","VersionCheck","G18_BCH","getReservedBitsCount","getTotalBitsFromDataArray","totalBits","reservedBits","defaultValue","getCapacity","MIXED","usableBits","currentVersion","getBestVersionForMixedData","getBestVersionForDataLength","toSJIS","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","cb","qrcodesize","bg","light","moveBy","newRow","lineLength","qrToPath","svgTag","Promise","then","string","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","move","dest","left","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","_strip","limbLen","limbPow","word","imuln","_iaddn","pow","copy","_move","clone","_expand","_normSign","Symbol","for","inspect","groupSizes","groupBases","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","lo","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","bl7","bh7","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","single_source_shortest_paths","predecessors","costs","closest","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","cost","extract_shortest_path_from_predecessor_list","reverse","T","queue","sorter","default_sorter","item","id","ccBits","testNumeric","testAlphanumeric","testKanji","toSJISFunction","CODEWORDS_COUNT","digit","kanji","Polynomial","genPoly","initialize","paddedData","remainder","buff","hex2rgba","hexCode","hexValue","getScale","qrSize","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","numeric","byte","RegExp","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","TextEncoder","canPromise","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","argsNum","isLastArgCb","resolve","reject","getRowColCoords","posCount","intervals","positions","coords","posLength","ALPHA_NUM_CHARS"],"sourceRoot":""}