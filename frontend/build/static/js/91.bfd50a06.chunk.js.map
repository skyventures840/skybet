{"version":3,"file":"static/js/91.bfd50a06.chunk.js","mappings":"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","sources":["components/admin/ManageMatches.js","components/admin/ManageUsers.js","services/websocketService.js","components/admin/AdminDashboard.js","pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiService from '../../services/api';\n\nconst ManageMatches = () => {\n  const [matches, setMatches] = useState([]);\n  const [leagues, setLeagues] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentMatch, setCurrentMatch] = useState(null);\n  const [formData, setFormData] = useState({\n    leagueName: '',\n    sport: '',\n    homeTeam: '',\n    awayTeam: '',\n    startTime: '',\n    status: 'upcoming',\n    homeScore: null,\n    awayScore: null,\n    odds: {},\n    videoUrl: '',\n    videoPosterUrl: ''\n  });\n  const [showAddLeague, setShowAddLeague] = useState(false);\n  const [newLeagueName, setNewLeagueName] = useState('');\n  const [saveMessage, setSaveMessage] = useState('');\n  const [autoLeagueId, setAutoLeagueId] = useState('');\n  const [autoExternalId, setAutoExternalId] = useState('');\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchPerformed, setSearchPerformed] = useState(false);\n  const [filteredMatches, setFilteredMatches] = useState([]);\n  const [selectedMatches, setSelectedMatches] = useState([]);\n  const [allMatchesSelected, setAllMatchesSelected] = useState(false);\n  const [bulkAction, setBulkAction] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n\n  useEffect(() => {\n    fetchMatches();\n    fetchLeagues();\n  }, []);\n\n  const fetchMatches = async () => {\n    try {\n      setLoading(true);\n      const response = await apiService.getAllMatches();\n      setMatches(response.data.matches);\n    } catch (err) {\n      setError('Failed to fetch matches.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchLeagues = async () => {\n    try {\n      const res = await apiService.getLeagues();\n      setLeagues(res.data);\n    } catch (err) {\n      setError('Failed to fetch leagues.');\n    }\n  };\n\n  // Auto-generate leagueId and externalId\n  useEffect(() => {\n    let leagueName = showAddLeague ? newLeagueName : formData.leagueName;\n    if (!leagueName) {\n      setAutoLeagueId('');\n      setAutoExternalId('');\n    // no-op\n      return;\n    }\n    // leagueId: lowercase, hyphenated\n    const leagueId = leagueName.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n    // externalPrefix: first letters of each word, up to 4 chars\n    const prefix = leagueName.split(' ').map(w => w[0]).join('').toUpperCase().slice(0, 4);\n    setAutoLeagueId(leagueId);\n    // Find max externalId for this league\n    const leagueMatches = matches.filter(m => m.leagueId === leagueId && m.externalId && m.externalId.startsWith(prefix));\n    let nextNum = 1;\n    if (leagueMatches.length > 0) {\n      const nums = leagueMatches.map(m => {\n        const match = m.externalId.match(/_(\\d+)$/);\n        return match ? parseInt(match[1], 10) : 0;\n      });\n      nextNum = Math.max(...nums) + 1;\n    }\n    setAutoExternalId(`${prefix}_${String(nextNum).padStart(3, '0')}`);\n  }, [formData.leagueName, newLeagueName, showAddLeague, matches]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleOddsChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, odds: { ...formData.odds, [name]: value } });\n  };\n\n  const handleCreateOrUpdateMatch = async (e) => {\n    e.preventDefault();\n    try {\n      const leagueName = showAddLeague ? newLeagueName : formData.leagueName;\n      const payload = {\n        leagueName: leagueName || '',\n        teams: {\n          home: formData.homeTeam || 'Home',\n          away: formData.awayTeam || 'Away'\n        },\n        startTime: formData.startTime || new Date().toISOString(),\n        odds: formData.odds && Object.keys(formData.odds).length > 0 ? formData.odds : {},\n        sport: (formData.sport || 'football').toLowerCase(),\n        status: formData.status || 'upcoming',\n        homeScore: formData.homeScore || 0,\n        awayScore: formData.awayScore || 0,\n        videoUrl: formData.videoUrl || undefined,\n        videoPosterUrl: formData.videoPosterUrl || undefined\n      };\n      if (currentMatch) {\n        await apiService.updateMatch(currentMatch._id, payload);\n        fetchMatches();\n        closeModal();\n      } else {\n        const res = await apiService.addMatch(payload);\n        const newId = res?.data?.id;\n        if (newId) {\n          // Stay in modal to allow immediate uploads\n          setCurrentMatch({ _id: newId });\n          setSaveMessage('Match saved. You can now upload the video/poster.');\n          fetchMatches();\n        } else {\n          // Fallback: close if no id returned\n          fetchMatches();\n          closeModal();\n        }\n      }\n      if (showAddLeague) {\n        setShowAddLeague(false);\n        setNewLeagueName('');\n        fetchLeagues();\n      }\n    } catch (err) {\n      setError('Failed to save match.');\n      console.error(err);\n    }\n  };\n\n  const handleDeleteMatch = async (id) => {\n    if (window.confirm('Are you sure you want to delete this match?')) {\n      try {\n        await apiService.deleteMatch(id);\n        fetchMatches();\n      } catch (err) {\n        setError('Failed to delete match.');\n        console.error(err);\n      }\n    }\n  };\n\n  const openCreateModal = () => {\n    setCurrentMatch(null);\n    setFormData({\n      leagueName: '',\n      sport: '',\n      homeTeam: '',\n      awayTeam: '',\n      startTime: '',\n      status: 'upcoming',\n      homeScore: null,\n      awayScore: null,\n      odds: {},\n      videoUrl: '',\n      videoPosterUrl: ''\n    });\n    setShowAddLeague(false);\n    setNewLeagueName('');\n    setIsModalOpen(true);\n  };\n\n  const openEditModal = (match) => {\n    setCurrentMatch(match);\n    setFormData({\n      leagueName: leagues.find(l => l.leagueId === match.leagueId)?.name || '',\n      sport: match.sport,\n      homeTeam: match.homeTeam,\n      awayTeam: match.awayTeam,\n      startTime: match.startTime.slice(0, 16),\n      status: match.status,\n      homeScore: match.homeScore,\n      awayScore: match.awayScore,\n      odds: match.odds || {},\n      videoUrl: match.videoUrl || '',\n      videoPosterUrl: match.videoPosterUrl || ''\n    });\n    setShowAddLeague(false);\n    setNewLeagueName('');\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentMatch(null);\n  };\n\n  // Search/filter logic\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSearchPerformed(true);\n    if (!searchQuery.trim() && !statusFilter) {\n      setFilteredMatches([]);\n      return;\n    }\n    const query = searchQuery.toLowerCase();\n    setFilteredMatches(\n      matches.filter((match) => {\n        const league = leagues.find(l => l.leagueId === match.leagueId)?.name || match.leagueName || \"\";\n        \n        const matchesSearch = !query || (\n          match.homeTeam?.toLowerCase().includes(query) ||\n          match.awayTeam?.toLowerCase().includes(query) ||\n          league.toLowerCase().includes(query)\n        );\n\n        const matchesStatus = !statusFilter || match.status === statusFilter;\n\n        return matchesSearch && matchesStatus;\n      })\n    );\n  };\n\n  // Add clear search function\n  const handleClearSearch = () => {\n    setSearchQuery('');\n    setStatusFilter('');\n    setSearchPerformed(false);\n    setFilteredMatches([]);\n  };\n\n  // Add show all matches function\n  const handleShowAll = () => {\n    setSearchQuery('');\n    setSearchPerformed(true);\n    setFilteredMatches(matches);\n  };\n\n  // Bulk operations functions\n  const handleSelectMatch = (matchId, checked) => {\n    if (checked) {\n      setSelectedMatches(prev => [...prev, matchId]);\n    } else {\n      setSelectedMatches(prev => prev.filter(id => id !== matchId));\n      setAllMatchesSelected(false);\n    }\n  };\n\n  const handleSelectAllMatches = (checked) => {\n    if (checked) {\n      const allMatchIds = (!searchPerformed ? matches : filteredMatches).map(match => match._id);\n      setSelectedMatches(allMatchIds);\n      setAllMatchesSelected(true);\n    } else {\n      setSelectedMatches([]);\n      setAllMatchesSelected(false);\n    }\n  };\n\n  const handleBulkAction = async () => {\n    if (!bulkAction || selectedMatches.length === 0) return;\n\n    try {\n      const promises = selectedMatches.map(matchId => {\n        switch (bulkAction) {\n          case 'delete':\n            return apiService.deleteMatch(matchId);\n          case 'status-upcoming':\n            return apiService.updateMatch(matchId, { status: 'upcoming' });\n          case 'status-live':\n            return apiService.updateMatch(matchId, { status: 'live' });\n          case 'status-finished':\n            return apiService.updateMatch(matchId, { status: 'finished' });\n          case 'status-cancelled':\n            return apiService.updateMatch(matchId, { status: 'cancelled' });\n          default:\n            return Promise.resolve();\n        }\n      });\n\n      await Promise.all(promises);\n      setSaveMessage(`${bulkAction} action completed for ${selectedMatches.length} matches`);\n      setSelectedMatches([]);\n      setAllMatchesSelected(false);\n      setBulkAction('');\n      fetchMatches(); // Refresh the matches list\n      \n      setTimeout(() => setSaveMessage(''), 3000);\n    } catch (error) {\n      console.error('Bulk action failed:', error);\n      setSaveMessage('Bulk action failed');\n      setTimeout(() => setSaveMessage(''), 3000);\n    }\n  };\n\n  if (loading) return <div className=\"text-white\">Loading matches...</div>;\n  if (error) return <div className=\"text-red-500\">Error: {error}</div>;\n\n  return (\n    <div className=\"admin-table-container\">\n      <div className=\"table-header\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-2xl font-bold text-white\">Manage Matches</h2>\n          <button\n            onClick={openCreateModal}\n            className=\"btn-export\"\n          >\n            + Add New Match\n          </button>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"search-filter\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by team or league...\"\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            className=\"search-input\"\n          />\n          <select\n            value={statusFilter}\n            onChange={e => setStatusFilter(e.target.value)}\n            className=\"search-input\"\n          >\n            <option value=\"\">All Status</option>\n            <option value=\"upcoming\">Upcoming</option>\n            <option value=\"live\">Live</option>\n            <option value=\"finished\">Finished</option>\n            <option value=\"cancelled\">Cancelled</option>\n            <option value=\"postponed\">Postponed</option>\n          </select>\n          <button\n            type=\"submit\"\n            onClick={handleSearch}\n            className=\"btn-refresh\"\n          >\n            Search\n          </button>\n          <button\n            type=\"button\"\n            onClick={handleShowAll}\n            className=\"btn-refresh\"\n          >\n            Show All\n          </button>\n          {searchPerformed && (\n            <button\n              type=\"button\"\n              onClick={handleClearSearch}\n              className=\"btn-cancel\"\n            >\n              Clear\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Match Statistics */}\n      <div className=\"mb-4 p-4 bg-gray-800 rounded-lg\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n          <div>\n            <div className=\"text-2xl font-bold text-green-400\">{matches.length}</div>\n            <div className=\"text-sm text-gray-300\">Total Matches</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-blue-400\">{matches.filter(m => m.status === 'upcoming').length}</div>\n            <div className=\"text-sm text-gray-300\">Upcoming</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-yellow-400\">{matches.filter(m => m.status === 'live').length}</div>\n            <div className=\"text-sm text-gray-300\">Live</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-red-400\">{matches.filter(m => m.status === 'finished').length}</div>\n            <div className=\"text-sm text-gray-300\">Finished</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Show table always, but with different data sources */}\n      <div className=\"overflow-x-auto\">\n        {(!searchPerformed ? matches : filteredMatches).length === 0 ? (\n          <div className=\"text-center py-8 text-gray-300\">\n            {!searchPerformed ? 'No matches found. Click \"Show All\" to view all matches.' : 'No matches found for your search.'}\n          </div>\n        ) : (\n          <table className=\"admin-table\">\n            <thead>\n              <tr>\n                <th>\n                  <input\n                    type=\"checkbox\"\n                    checked={allMatchesSelected}\n                    onChange={(e) => handleSelectAllMatches(e.target.checked)}\n                  />\n                </th>\n                <th>Sport</th>\n                <th>Match</th>\n                <th>League</th>\n                <th>Start Time</th>\n                <th>Status</th>\n                <th>Score</th>\n                <th>Odds</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {(!searchPerformed ? matches : filteredMatches).map((match) => (\n                <tr key={match._id}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedMatches.includes(match._id)}\n                      onChange={(e) => handleSelectMatch(match._id, e.target.checked)}\n                    />\n                  </td>\n                  <td>\n                    <span className=\"sport-badge\">{match.sport}</span>\n                  </td>\n                  <td>\n                    <div className=\"match-info\">\n                      <div className=\"teams\">{match.homeTeam} vs {match.awayTeam}</div>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"league\">{match.leagueId?.name || 'N/A'}</div>\n                  </td>\n                  <td>\n                    <div className=\"text-sm\">{new Date(match.startTime).toLocaleDateString()}</div>\n                    <div className=\"text-xs text-gray-400\">{new Date(match.startTime).toLocaleTimeString()}</div>\n                  </td>\n                  <td>\n                    <span className={`status-badge ${match.status}`}>\n                      {match.status}\n                    </span>\n                  </td>\n                  <td>\n                    {match.homeScore !== null ? `${match.homeScore} - ${match.awayScore}` : 'N/A'}\n                  </td>\n                  <td>\n                    <div className=\"odds-preview\">\n                      {match.odds && Object.keys(match.odds).length > 0 ? (\n                        <span className=\"text-green-400 text-sm\">✓ Set</span>\n                      ) : (\n                        <span className=\"text-gray-400 text-sm\">Not set</span>\n                      )}\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"action-buttons\">\n                      <button\n                        onClick={() => openEditModal(match)}\n                        className=\"btn-edit\"\n                      >\n                        Edit\n                      </button>\n                      <button\n                        onClick={() => handleDeleteMatch(match._id)}\n                        className=\"btn-cancel\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n\n      {/* Bulk Actions */}\n      {selectedMatches.length > 0 && (\n        <div className=\"bulk-actions\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-white\">\n              {selectedMatches.length} match(es) selected\n            </span>\n            <div className=\"flex items-center gap-3\">\n              <select\n                value={bulkAction}\n                onChange={(e) => setBulkAction(e.target.value)}\n                className=\"bg-gray-700 text-white px-3 py-2 rounded border border-gray-600\"\n              >\n                <option value=\"\">Select Action</option>\n                <option value=\"status-upcoming\">Set Status: Upcoming</option>\n                <option value=\"status-live\">Set Status: Live</option>\n                <option value=\"status-finished\">Set Status: Finished</option>\n                <option value=\"status-cancelled\">Set Status: Cancelled</option>\n                <option value=\"delete\">Delete Matches</option>\n              </select>\n              <button\n                onClick={handleBulkAction}\n                disabled={!bulkAction}\n                className=\"btn-export disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Apply Action\n              </button>\n              <button\n                onClick={() => {\n                  setSelectedMatches([]);\n                  setAllMatchesSelected(false);\n                  setBulkAction('');\n                }}\n                className=\"btn-cancel\"\n              >\n                Clear Selection\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h3>{currentMatch ? 'Edit Match' : 'Add New Match'}</h3>\n              <button \n                className=\"modal-close\"\n                onClick={closeModal}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-body\">\n            {saveMessage && (\n              <div className=\"mb-4 text-green-400 text-sm\">{saveMessage}</div>\n            )}\n            <form onSubmit={handleCreateOrUpdateMatch} className=\"space-y-4\">\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>League:</label>\n                {!showAddLeague ? (\n                  <div className=\"flex gap-2\">\n                    <select\n                      name=\"leagueName\"\n                      value={formData.leagueName}\n                      onChange={e => {\n                        if (e.target.value === '__add_new__') {\n                          setShowAddLeague(true);\n                          setFormData({ ...formData, leagueName: '' });\n                        } else {\n                          setFormData({ ...formData, leagueName: e.target.value });\n                        }\n                      }}\n                      required\n                    >\n                      <option value=\"\">Select League</option>\n                      {leagues.map(l => (\n                        <option key={l._id} value={l.name}>{l.name}</option>\n                      ))}\n                      <option value=\"__add_new__\">+ Add New League</option>\n                    </select>\n                  </div>\n                ) : (\n                  <div className=\"flex gap-2 items-center\">\n                    <input\n                      type=\"text\"\n                      value={newLeagueName}\n                      onChange={e => setNewLeagueName(e.target.value)}\n                      placeholder=\"Enter new league name\"\n                      required\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"btn-cancel\"\n                      onClick={() => {\n                        setShowAddLeague(false);\n                        setNewLeagueName('');\n                      }}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                )}\n              </div>\n              {/* Video URL */}\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Match Video (MP4/WebM)</label>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Video URL:</label>\n                    <input\n                      type=\"url\"\n                      name=\"videoUrl\"\n                      placeholder=\"https://your-backend-url.onrender.com/uploads/videos/your-video.mp4\"\n                      value={formData.videoUrl}\n                      onChange={handleInputChange}\n                    />\n                  </div>\n                  <div className=\"flex items-end gap-2\">\n                    <div className=\"flex-1\">\n                      <label className=\"block text-white text-sm font-bold mb-2\">Or upload video file:</label>\n                      <input\n                        type=\"file\"\n                        accept=\"video/mp4,video/webm,video/ogg\"\n                        disabled={false}\n                        onChange={async (e) => {\n                          const file = e.target.files?.[0];\n                          if (!file) return;\n                          const fd = new FormData();\n                          // Ensure field name matches backend 'upload.single(\\'video\\')'\n                          fd.append('video', file, file.name);\n                          if (currentMatch?._id) {\n                            try {\n                              const res = await apiService.uploadMatchVideo(currentMatch._id, fd);\n                              setFormData(prev => ({ ...prev, videoUrl: res.data.videoUrl }));\n                            } catch (err) {\n                              try {\n                                const res2 = await apiService.uploadMatchVideoFallback(currentMatch._id, fd);\n                                setFormData(prev => ({ ...prev, videoUrl: res2.data.videoUrl }));\n                              } catch (err2) {\n                                // Final fallback to temp endpoints\n                                try {\n                                  const res3 = await apiService.uploadVideoTemp(fd);\n                                  setFormData(prev => ({ ...prev, videoUrl: res3.data.videoUrl }));\n                                } catch (err3) {\n                                  try {\n                                    const res4 = await apiService.uploadVideoTempFallback(fd);\n                                    setFormData(prev => ({ ...prev, videoUrl: res4.data.videoUrl }));\n                                  } catch (err4) {\n                                    const msg = err4?.response?.data?.error || err4?.message || 'Failed to upload video';\n                                    alert(msg);\n                                    console.error('Video upload error:', err4);\n                                  }\n                                }\n                              }\n                            }\n                          } else {\n                            // Pre-save upload: use temp endpoints\n                            try {\n                              const res = await apiService.uploadVideoTemp(fd);\n                              setFormData(prev => ({ ...prev, videoUrl: res.data.videoUrl }));\n                            } catch (err) {\n                              try {\n                                const res2 = await apiService.uploadVideoTempFallback(fd);\n                                setFormData(prev => ({ ...prev, videoUrl: res2.data.videoUrl }));\n                              } catch (err2) {\n                                const msg = err2?.response?.data?.error || err2?.message || 'Failed to upload video';\n                                alert(msg);\n                                console.error('Video upload error:', err2);\n                              }\n                            }\n                          }\n                        }}\n                        className=\"block w-full text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-gray-600 file:text-white hover:file:bg-gray-700\"\n                      />\n                      <div className=\"text-xs text-gray-400 mt-1\">You can upload before or after saving; the URL is stored with the match.</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* Poster URL */}\n              <div className=\"md:col-span-2\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-white text-sm font-bold mb-2\">Poster URL (thumbnail):</label>\n                    <input\n                      type=\"url\"\n                      name=\"videoPosterUrl\"\n                      placeholder=\"https://your-backend-url.onrender.com/uploads/posters/poster.jpg\"\n                      value={formData.videoPosterUrl}\n                      onChange={handleInputChange}\n                      className=\"shadow appearance-none border rounded w-full py-2 px-3 text-black leading-tight focus:outline-none focus:shadow-outline bg-white border-black\"\n                    />\n                  </div>\n                  <div className=\"flex items-end gap-2\">\n                    <div className=\"flex-1\">\n                      <label className=\"block text-white text-sm font-bold mb-2\">Or upload poster image:</label>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        disabled={false}\n                        onChange={async (e) => {\n                          const file = e.target.files?.[0];\n                          if (!file) return;\n                          const fd = new FormData();\n                          // Ensure field name matches backend 'upload.single(\\'poster\\')'\n                          fd.append('poster', file, file.name);\n                          if (currentMatch?._id) {\n                            try {\n                              const res = await apiService.uploadMatchPoster(currentMatch._id, fd);\n                              setFormData(prev => ({ ...prev, videoPosterUrl: res.data.videoPosterUrl }));\n                            } catch (err) {\n                              try {\n                                const res2 = await apiService.uploadMatchPosterFallback(currentMatch._id, fd);\n                                setFormData(prev => ({ ...prev, videoPosterUrl: res2.data.videoPosterUrl }));\n                              } catch (err2) {\n                                // Final fallback to temp endpoints\n                                try {\n                                  const res3 = await apiService.uploadPosterTemp(fd);\n                                  setFormData(prev => ({ ...prev, videoPosterUrl: res3.data.videoPosterUrl }));\n                                } catch (err3) {\n                                  try {\n                                    const res4 = await apiService.uploadPosterTempFallback(fd);\n                                    setFormData(prev => ({ ...prev, videoPosterUrl: res4.data.videoPosterUrl }));\n                                  } catch (err4) {\n                                    const msg = err4?.response?.data?.error || err4?.message || 'Failed to upload poster';\n                                    alert(msg);\n                                    console.error('Poster upload error:', err4);\n                                  }\n                                }\n                              }\n                            }\n                          } else {\n                            // Pre-save upload: use temp endpoints\n                            try {\n                              const res = await apiService.uploadPosterTemp(fd);\n                              setFormData(prev => ({ ...prev, videoPosterUrl: res.data.videoPosterUrl }));\n                            } catch (err) {\n                              try {\n                                const res2 = await apiService.uploadPosterTempFallback(fd);\n                                setFormData(prev => ({ ...prev, videoPosterUrl: res2.data.videoPosterUrl }));\n                              } catch (err2) {\n                                const msg = err2?.response?.data?.error || err2?.message || 'Failed to upload poster';\n                                alert(msg);\n                                console.error('Poster upload error:', err2);\n                              }\n                            }\n                          }\n                        }}\n                        className=\"block w-full text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-gray-600 file:text-white hover:file:bg-gray-700\"\n                      />\n                      <div className=\"text-xs text-gray-400 mt-1\">You can upload before or after saving; the URL is stored with the match.</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-white text-sm font-bold mb-2\">League ID (auto):</label>\n                <input\n                  type=\"text\"\n                  value={autoLeagueId}\n                  readOnly\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-black leading-tight focus:outline-none focus:shadow-outline bg-white border-black\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-white text-sm font-bold mb-2\">External ID (auto):</label>\n                <input\n                  type=\"text\"\n                  value={autoExternalId}\n                  readOnly\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-black leading-tight focus:outline-none focus:shadow-outline bg-white border-black\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Sport:</label>\n                <input\n                  type=\"text\"\n                  name=\"sport\"\n                  value={formData.sport}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Home Team:</label>\n                <input\n                  type=\"text\"\n                  name=\"homeTeam\"\n                  value={formData.homeTeam}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Away Team:</label>\n                <input\n                  type=\"text\"\n                  name=\"awayTeam\"\n                  value={formData.awayTeam}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Start Time:</label>\n                <input\n                  type=\"datetime-local\"\n                  name=\"startTime\"\n                  value={formData.startTime}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Status:</label>\n                <select\n                  name=\"status\"\n                  value={formData.status}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"upcoming\">Upcoming</option>\n                  <option value=\"live\">Live</option>\n                  <option value=\"finished\">Finished</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                  <option value=\"postponed\">Postponed</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Home Score:</label>\n                <input\n                  type=\"number\"\n                  name=\"homeScore\"\n                  value={formData.homeScore || ''}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Away Score:</label>\n                <input\n                  type=\"number\"\n                  name=\"awayScore\"\n                  value={formData.awayScore || ''}\n                  onChange={handleInputChange}\n                />\n              </div>\n              {/* Odds Inputs */}\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Odds (Optional)</label>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Home Win:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"homeWin\"\n                      value={formData.odds.homeWin || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Draw:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"draw\"\n                      value={formData.odds.draw || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Away Win:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"awayWin\"\n                      value={formData.odds.awayWin || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Total (Over/Under Line):</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"total\"\n                      value={formData.odds.total || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Over Odds:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"over\"\n                      value={formData.odds.over || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Under Odds:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"under\"\n                      value={formData.odds.under || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Handicap Line:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"handicapLine\"\n                      value={formData.odds.handicapLine || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Home Handicap Odds:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"homeHandicap\"\n                      value={formData.odds.homeHandicap || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label style={{ color: 'black' }}>Away Handicap Odds:</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      name=\"awayHandicap\"\n                      value={formData.odds.awayHandicap || ''}\n                      onChange={handleOddsChange}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-actions\">\n                <button\n                  type=\"button\"\n                  onClick={closeModal}\n                  className=\"btn-cancel\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn-export\"\n                >\n                  {currentMatch ? 'Update Match' : 'Add Match'}\n                </button>\n              </div>\n            </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManageMatches;","import React, { useState, useEffect } from 'react';\nimport apiService from '../../services/api';\n\n// Dropdown Action Component\nconst ActionDropdown = ({ user, onEdit, onDelete, onBlock, onUnblock }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleAction = (action, actionFn) => {\n    setIsOpen(false);\n    actionFn();\n  };\n\n  return (\n    <div className=\"relative inline-block text-left\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded inline-flex items-center transition-colors duration-200\"\n      >\n        Actions\n        <svg className=\"w-4 h-4 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <>\n          {/* Backdrop to close dropdown when clicking outside */}\n          <div \n            className=\"fixed inset-0 z-10\" \n            onClick={() => setIsOpen(false)}\n          ></div>\n          \n          {/* Dropdown menu */}\n          <div className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-md shadow-lg z-20 border border-gray-600\">\n            <div className=\"py-1\">\n              <button\n                onClick={() => handleAction('edit', () => onEdit(user))}\n                className=\"flex items-center w-full px-4 py-2 text-sm text-gray-200 hover:bg-gray-600 hover:text-white transition-colors duration-150\"\n              >\n                <svg className=\"w-4 h-4 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n                Edit User\n              </button>\n              \n              {user.isBlocked ? (\n                <button\n                  onClick={() => handleAction('unblock', () => onUnblock(user._id))}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-green-400 hover:bg-gray-600 hover:text-green-300 transition-colors duration-150\"\n                >\n                  <svg className=\"w-4 h-4 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\" />\n                  </svg>\n                  Unblock User\n                </button>\n              ) : (\n                <button\n                  onClick={() => handleAction('block', () => onBlock(user._id))}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-orange-400 hover:bg-gray-600 hover:text-orange-300 transition-colors duration-150\"\n                >\n                  <svg className=\"w-4 h-4 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                  Block User\n                </button>\n              )}\n              \n              <div className=\"border-t border-gray-600 my-1\"></div>\n              \n              <button\n                onClick={() => handleAction('delete', () => onDelete(user._id))}\n                className=\"flex items-center w-full px-4 py-2 text-sm text-red-400 hover:bg-gray-600 hover:text-red-300 transition-colors duration-150\"\n              >\n                <svg className=\"w-4 h-4 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                Delete User\n              </button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst ManageUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    isAdmin: false,\n    balance: 0,\n    isBlocked: false,\n  });\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response = await apiService.getAdminUsers();\n      setUsers(response.data.users || []);\n    } catch (err) {\n      setError('Failed to fetch users.');\n      console.error(err);\n      setUsers([]); // Ensure users is always an array\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({ ...formData, [name]: type === 'checkbox' ? checked : value });\n  };\n\n  const handleUpdateUser = async (e) => {\n    e.preventDefault();\n    try {\n      await apiService.updateUser(currentUser._id, formData);\n      fetchUsers();\n      closeModal();\n    } catch (err) {\n      setError('Failed to update user.');\n      console.error(err);\n    }\n  };\n\n  const handleDeleteUser = async (id) => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        await apiService.deleteUser(id);\n        fetchUsers();\n      } catch (err) {\n        setError('Failed to delete user.');\n        console.error(err);\n      }\n    }\n  };\n\n  const openEditModal = (user) => {\n    setCurrentUser(user);\n    setFormData({\n      username: user.username,\n      email: user.email,\n      isAdmin: user.isAdmin,\n      balance: user.balance,\n      isBlocked: user.isBlocked,\n    });\n    setIsModalOpen(true);\n  };\n\n  const handleBlockUser = async (id) => {\n    if (window.confirm('Are you sure you want to block this user?')) {\n      try {\n        await apiService.blockUser(id);\n        fetchUsers();\n      } catch (err) {\n        setError('Failed to block user.');\n        console.error(err);\n      }\n    }\n  };\n\n  const handleUnblockUser = async (id) => {\n    if (window.confirm('Are you sure you want to unblock this user?')) {\n      try {\n        await apiService.unblockUser(id);\n        fetchUsers();\n      } catch (err) {\n        setError('Failed to unblock user.');\n        console.error(err);\n      }\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentUser(null);\n  };\n\n  if (loading) return <div className=\"text-white\">Loading users...</div>;\n  if (error) return <div className=\"text-red-500\">Error: {error}</div>;\n\n  return (\n    <div className=\"p-6 bg-gray-800 rounded-lg shadow-md\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-3xl font-bold text-white\">Manage Users</h2>\n        <button\n          onClick={fetchUsers}\n          disabled={loading}\n          className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-bold py-2 px-4 rounded\"\n        >\n          {loading ? 'Loading...' : 'Refresh'}\n        </button>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-gray-700 rounded-lg overflow-hidden shadow-xl\">\n          <thead className=\"bg-gradient-to-r from-gray-600 to-gray-500\">\n            <tr>\n              <th className=\"py-4 px-4 text-left text-sm font-semibold text-gray-100 uppercase tracking-wider\">Username</th>\n              <th className=\"py-4 px-4 text-left text-sm font-semibold text-gray-100 uppercase tracking-wider\">Email</th>\n              <th className=\"py-4 px-4 text-left text-sm font-semibold text-gray-100 uppercase tracking-wider\">Role</th>\n              <th className=\"py-4 px-4 text-left text-sm font-semibold text-gray-100 uppercase tracking-wider\">Balance</th>\n              <th className=\"py-4 px-4 text-left text-sm font-semibold text-gray-100 uppercase tracking-wider\">Status</th>\n              <th className=\"py-4 px-4 text-left text-sm font-semibold text-gray-100 uppercase tracking-wider\">Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-gray-300\">\n            {users.map((user) => (\n              <tr key={user._id} className=\"border-t border-gray-600 hover:bg-gray-600 transition-colors duration-200 cursor-pointer\">\n                <td className=\"py-4 px-4 font-medium\">{user.username}</td>\n                <td className=\"py-4 px-4\">{user.email}</td>\n                <td className=\"py-4 px-4\">\n                  <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                    user.isAdmin \n                      ? 'bg-green-100 text-green-800' \n                      : 'bg-gray-100 text-gray-800'\n                  }`}>\n                    {user.isAdmin ? 'Admin' : 'User'}\n                  </span>\n                </td>\n                <td className=\"py-4 px-4 font-mono\">${user.balance.toFixed(2)}</td>\n                 <td className=\"py-4 px-4\">\n                   <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                     user.isBlocked \n                       ? 'bg-red-100 text-red-800' \n                       : 'bg-green-100 text-green-800'\n                   }`}>\n                     <span className={`w-2 h-2 rounded-full mr-1.5 ${\n                       user.isBlocked ? 'bg-red-400' : 'bg-green-400'\n                     }`}></span>\n                     {user.isBlocked ? 'Blocked' : 'Active'}\n                   </span>\n                 </td>\n                <td className=\"py-4 px-4\">\n                  <ActionDropdown\n                    user={user}\n                    onEdit={openEditModal}\n                    onDelete={handleDeleteUser}\n                    onBlock={handleBlockUser}\n                    onUnblock={handleUnblockUser}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-800 p-8 rounded-lg shadow-xl max-w-md w-full\">\n            <h3 className=\"text-2xl font-bold mb-6 text-white\">Edit User</h3>\n            <form onSubmit={handleUpdateUser} className=\"grid grid-cols-1 gap-4\">\n              <div>\n                <label className=\"block text-black text-sm font-bold mb-2\">Username:</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline bg-gray-700 border-gray-600\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-black text-sm font-bold mb-2\">Email:</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline bg-gray-700 border-gray-600\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-black text-sm font-bold mb-2\">Balance:</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"balance\"\n                  value={formData.balance}\n                  onChange={handleInputChange}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline bg-gray-700 border-gray-600\"\n                  required\n                />\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  name=\"isAdmin\"\n                  checked={formData.isAdmin}\n                  onChange={handleInputChange}\n                  className=\"mr-2 leading-tight\"\n                />\n                <label className=\"text-black text-sm font-bold\">Is Admin</label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  name=\"isBlocked\"\n                  checked={formData.isBlocked}\n                  onChange={handleInputChange}\n                  className=\"mr-2 leading-tight\"\n                />\n                <label className=\"text-black text-sm font-bold\">Is Blocked</label>\n              </div>\n              <div className=\"flex justify-end mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={closeModal}\n                  className=\"bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded mr-2\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n                >\n                  Update User\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ManageUsers;","class WebSocketService {\r\n  constructor() {\r\n    this.ws = null;\r\n    this.reconnectAttempts = 0;\r\n    this.maxReconnectAttempts = 5;\r\n    this.reconnectDelay = 1000;\r\n    this.listeners = new Map();\r\n    this.isConnected = false;\r\n  }\r\n  \r\n  // Connect to WebSocket server\r\n  connect(token) {\r\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Use environment variable for WebSocket URL, fallback to localhost for development\r\n      const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:5000/ws';\r\n      this.ws = new WebSocket(`${wsUrl}?token=${token}`);\r\n      \r\n      this.ws.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        this.isConnected = true;\r\n        this.reconnectAttempts = 0;\r\n        this.emit('connected');\r\n      };\r\n      \r\n      this.ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          this.handleMessage(data);\r\n        } catch (error) {\r\n          console.error('Error parsing WebSocket message:', error);\r\n        }\r\n      };\r\n      \r\n      this.ws.onclose = (event) => {\r\n        console.log('WebSocket disconnected:', event.code, event.reason);\r\n        this.isConnected = false;\r\n        this.emit('disconnected', event);\r\n        \r\n        // Attempt to reconnect if not manually closed\r\n        if (event.code !== 1000 && this.reconnectAttempts < this.maxReconnectAttempts) {\r\n          this.scheduleReconnect();\r\n        }\r\n      };\r\n      \r\n      this.ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        this.emit('error', error);\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('Error creating WebSocket connection:', error);\r\n      this.emit('error', error);\r\n    }\r\n  }\r\n  \r\n  // Schedule reconnection attempt\r\n  scheduleReconnect() {\r\n    this.reconnectAttempts++;\r\n    const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1);\r\n    \r\n    console.log(`Scheduling WebSocket reconnection attempt ${this.reconnectAttempts} in ${delay}ms`);\r\n    \r\n    setTimeout(() => {\r\n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          this.connect(token);\r\n        }\r\n      }\r\n    }, delay);\r\n  }\r\n  \r\n  // Handle incoming messages\r\n  handleMessage(data) {\r\n    const { type, payload } = data;\r\n    \r\n    switch (type) {\r\n      case 'bet_status_update':\r\n        this.emit('betStatusUpdate', payload);\r\n        break;\r\n      case 'match_result_update':\r\n        this.emit('matchResultUpdate', payload);\r\n        break;\r\n      case 'odds_change':\r\n        this.emit('oddsChange', payload);\r\n        break;\r\n      case 'live_matches_update':\r\n        this.emit('liveMatchesUpdate', payload);\r\n        break;\r\n      case 'pong':\r\n        // Handle heartbeat response\r\n        break;\r\n      default:\r\n        console.log('Unknown WebSocket message type:', type);\r\n    }\r\n  }\r\n  \r\n  // Send message to server\r\n  send(type, payload = {}) {\r\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n      const message = JSON.stringify({ type, payload });\r\n      this.ws.send(message);\r\n    } else {\r\n      console.warn('WebSocket is not connected. Cannot send message:', type);\r\n    }\r\n  }\r\n  \r\n  // Subscribe to match updates\r\n  subscribeToMatch(matchId) {\r\n    this.send('subscribe_match', { matchId });\r\n  }\r\n  \r\n  // Unsubscribe from match updates\r\n  unsubscribeFromMatch(matchId) {\r\n    this.send('unsubscribe_match', { matchId });\r\n  }\r\n  \r\n  // Subscribe to user's bets\r\n  subscribeToUserBets(userId) {\r\n    this.send('subscribe_user_bets', { userId });\r\n  }\r\n  \r\n  // Unsubscribe from user's bets\r\n  unsubscribeFromUserBets(userId) {\r\n    this.send('unsubscribe_user_bets', { userId });\r\n  }\r\n  \r\n  // Subscribe to live matches\r\n  subscribeToLiveMatches() {\r\n    this.send('subscribe_live_matches');\r\n  }\r\n  \r\n  // Unsubscribe from live matches\r\n  unsubscribeFromLiveMatches() {\r\n    this.send('unsubscribe_live_matches');\r\n  }\r\n  \r\n  // Request live matches\r\n  requestLiveMatches() {\r\n    this.send('request_live_matches');\r\n  }\r\n  \r\n  // Request bet status update\r\n  requestBetStatus(betId) {\r\n    this.send('request_bet_status', { betId });\r\n  }\r\n  \r\n  // Start heartbeat to keep connection alive\r\n  startHeartbeat() {\r\n    this.heartbeatInterval = setInterval(() => {\r\n      if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n        this.send('ping');\r\n      } else if (this.ws && this.ws.readyState === WebSocket.CLOSED) {\r\n        console.log('[WS] Connection closed during heartbeat, attempting reconnect');\r\n        this.reconnect();\r\n      }\r\n    }, 20000); // Send ping every 20 seconds (more frequent for hosting platforms)\r\n  }\r\n  \r\n  // Stop heartbeat\r\n  stopHeartbeat() {\r\n    if (this.heartbeatInterval) {\r\n      clearInterval(this.heartbeatInterval);\r\n      this.heartbeatInterval = null;\r\n    }\r\n  }\r\n  \r\n  // Add event listener\r\n  on(event, callback) {\r\n    if (!this.listeners.has(event)) {\r\n      this.listeners.set(event, []);\r\n    }\r\n    this.listeners.get(event).push(callback);\r\n  }\r\n  \r\n  // Remove event listener\r\n  off(event, callback) {\r\n    if (this.listeners.has(event)) {\r\n      const callbacks = this.listeners.get(event);\r\n      const index = callbacks.indexOf(callback);\r\n      if (index > -1) {\r\n        callbacks.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Emit event to all listeners\r\n  emit(event, data) {\r\n    if (this.listeners.has(event)) {\r\n      this.listeners.get(event).forEach(callback => {\r\n        try {\r\n          callback(data);\r\n        } catch (error) {\r\n          console.error('Error in WebSocket event listener:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Disconnect WebSocket\r\n  disconnect() {\r\n    if (this.ws) {\r\n      this.ws.close(1000, 'User initiated disconnect');\r\n      this.ws = null;\r\n    }\r\n    this.isConnected = false;\r\n    this.stopHeartbeat();\r\n  }\r\n  \r\n  // Get connection status\r\n  getConnectionStatus() {\r\n    return {\r\n      isConnected: this.isConnected,\r\n      readyState: this.ws ? this.ws.readyState : null,\r\n      reconnectAttempts: this.reconnectAttempts\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst websocketService = new WebSocketService();\r\n\r\nexport default websocketService;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faUsers, faChartLine, faMoneyBillWave, \n  faCog, faFileAlt, faSearch, faFilter, faFutbol\n} from '@fortawesome/free-solid-svg-icons';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ManageMatches from './ManageMatches';\nimport ManageUsers from './ManageUsers';\nimport apiService from '../../services/api';\nimport WebSocketService from '../../services/websocketService';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  LineElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst AdminDashboard = () => {\n  const barChartRef = useRef(null);\n  const lineChartRef = useRef(null);\n  const doughnutChartRef = useRef(null);\n\n  // Main state\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const location = useLocation();\n\n  // State for dashboard data\n  const [dashboardData, setDashboardData] = useState({\n    totalBets: 0,\n    totalDeposits: 0,\n    activeUsers: 0,\n    activeMatches: 0\n  });\n\n  // Bet management state\n  const [bets, setBets] = useState([]);\n  const [betLoading, setBetLoading] = useState(false);\n  const [betSearchQuery, setBetSearchQuery] = useState('');\n  const [betStatusFilter, setBetStatusFilter] = useState('');\n  const [currentBetPage, setCurrentBetPage] = useState(1);\n  const [totalBetPages, setTotalBetPages] = useState(1);\n  const [selectedBets, setSelectedBets] = useState([]);\n  const [allBetsSelected, setAllBetsSelected] = useState(false);\n  const [bulkAction, setBulkAction] = useState('');\n  const [betEditModal, setBetEditModal] = useState({ open: false, bet: null });\n  const [betSettleModal, setBetSettleModal] = useState({ open: false, bet: null });\n  const [lastRefresh, setLastRefresh] = useState(null);\n  const [isAutoRefreshing, setIsAutoRefreshing] = useState(false);\n\n  // WebSocket connection for real-time updates\n  useEffect(() => {\n    if (activeTab === 'bet-management') {\n      console.log('[ADMIN DASHBOARD] Connecting to WebSocket for real-time bet updates...');\n      \n      // Connect to WebSocket\n      WebSocketService.connect();\n      \n      // Listen for bet status updates\n      const handleBetStatusUpdate = (data) => {\n        console.log('[ADMIN DASHBOARD] Received bet status update:', data);\n        \n        // Update the specific bet in the current list\n        setBets(prevBets => {\n          return prevBets.map(bet => {\n            if (bet._id === data.betId) {\n              return {\n                ...bet,\n                status: data.status,\n                actualWin: data.actualWin || bet.actualWin,\n                updatedAt: new Date().toISOString()\n              };\n            }\n            return bet;\n          });\n        });\n        \n        // Update last refresh time\n        setLastRefresh(new Date());\n      };\n\n      // Listen for new bets\n      const handleNewBet = (data) => {\n        console.log('[ADMIN DASHBOARD] Received new bet:', data);\n        \n        // Add new bet to the beginning of the list if it matches current filters\n        if (shouldIncludeBet(data)) {\n          setBets(prevBets => [data, ...prevBets]);\n          setLastRefresh(new Date());\n        }\n      };\n\n      // Listen for bet updates\n      const handleBetUpdate = (data) => {\n        console.log('[ADMIN DASHBOARD] Received bet update:', data);\n        \n        // Update the specific bet\n        setBets(prevBets => {\n          return prevBets.map(bet => {\n            if (bet._id === data.betId || bet._id === data._id) {\n              return { ...bet, ...data };\n            }\n            return bet;\n          });\n        });\n        \n        setLastRefresh(new Date());\n      };\n\n      // Helper function to check if bet should be included based on current filters\n      const shouldIncludeBet = (bet) => {\n        if (betStatusFilter && bet.status !== betStatusFilter) {\n          return false;\n        }\n        if (betSearchQuery) {\n          const searchLower = betSearchQuery.toLowerCase();\n          const matchesSearch = \n            bet.userId?.username?.toLowerCase().includes(searchLower) ||\n            bet.userId?.email?.toLowerCase().includes(searchLower) ||\n            bet.homeTeam?.toLowerCase().includes(searchLower) ||\n            bet.awayTeam?.toLowerCase().includes(searchLower) ||\n            bet.league?.toLowerCase().includes(searchLower) ||\n            bet.market?.toLowerCase().includes(searchLower) ||\n            bet.selection?.toLowerCase().includes(searchLower);\n          \n          if (!matchesSearch) {\n            return false;\n          }\n        }\n        return true;\n      };\n\n      // Add event listeners\n      WebSocketService.on('bet_status_update', handleBetStatusUpdate);\n      WebSocketService.on('new_bet', handleNewBet);\n      WebSocketService.on('bet_update', handleBetUpdate);\n\n      // Cleanup function\n      return () => {\n        console.log('[ADMIN DASHBOARD] Cleaning up WebSocket listeners...');\n        WebSocketService.off('bet_status_update', handleBetStatusUpdate);\n        WebSocketService.off('new_bet', handleNewBet);\n        WebSocketService.off('bet_update', handleBetUpdate);\n      };\n    }\n  }, [activeTab, betStatusFilter, betSearchQuery]);\n\n  // Sample chart data\n  const bettingActivityData = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    datasets: [{\n      label: 'Bets',\n      data: [12, 19, 3, 5, 2, 3, 15],\n      backgroundColor: '#00ff88'\n    }]\n  };\n\n  const depositWithdrawalData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n    datasets: [\n      {\n        label: 'Deposits',\n        data: [5000, 4000, 6000, 3000, 7000, 6500],\n        borderColor: '#00ff88',\n        fill: false\n      },\n      {\n        label: 'Withdrawals',\n        data: [2000, 3000, 2500, 4000, 3500, 3000],\n        borderColor: '#ff4444',\n        fill: false\n      }\n    ]\n  };\n\n  const userDistributionData = {\n    labels: ['New', 'Active', 'Inactive'],\n    datasets: [{\n      data: [300, 500, 200],\n      backgroundColor: ['#00ff88', '#00cc6a', '#888888']\n    }]\n  };\n\n  // Removed unused sample data - using real data from API\n\n  // Form states\n\n  const [heroSlides, setHeroSlides] = useState([]);\n  const [heroLoading, setHeroLoading] = useState(false);\n  const [heroError, setHeroError] = useState(null);\n  const [showHeroModal, setShowHeroModal] = useState(false);\n  const [editingHero, setEditingHero] = useState(null);\n  const [heroForm, setHeroForm] = useState({ image: '', caption1: '', caption2: '', buttonText: '', buttonUrl: '' });\n  const [uploading, setUploading] = useState(false);\n  const [uploadError, setUploadError] = useState(null);\n\n  // Fetch hero slides\n  const fetchHeroSlides = async () => {\n    try {\n      setHeroLoading(true);\n      const res = await apiService.getHeroSlides();\n      setHeroSlides(res.data);\n    } catch (err) {\n      setHeroError('Failed to load hero slides');\n    } finally {\n      setHeroLoading(false);\n    }\n  };\n  useEffect(() => { if (activeTab === 'hero') fetchHeroSlides(); }, [activeTab]);\n\n  const openHeroModal = (slide = null) => {\n    setEditingHero(slide);\n    setHeroForm(slide ? { ...slide } : { image: '', caption1: '', caption2: '', buttonText: '', buttonUrl: '' });\n    setShowHeroModal(true);\n    setUploadError(null);\n  };\n  const closeHeroModal = () => { setShowHeroModal(false); setEditingHero(null); };\n\n  const handleHeroFormChange = (e) => {\n    const { name, value } = e.target;\n    setHeroForm({ ...heroForm, [name]: value });\n  };\n\n  const handleHeroImageUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploading(true);\n    setUploadError(null);\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const res = await apiService.uploadHeroImage(formData);\n      setHeroForm({ ...heroForm, image: res.data.imageUrl });\n    } catch (err) {\n      setUploadError('Image upload failed');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleHeroFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingHero) {\n        await apiService.updateHeroSlide(editingHero._id, heroForm);\n      } else {\n        await apiService.createHeroSlide(heroForm);\n      }\n      fetchHeroSlides();\n      closeHeroModal();\n    } catch (err) {\n      setUploadError('Failed to save hero slide');\n    }\n  };\n\n  const handleDeleteHero = async (id) => {\n    if (!window.confirm('Delete this hero slide?')) return;\n    try {\n      await apiService.deleteHeroSlide(id);\n      fetchHeroSlides();\n    } catch (err) {\n      setHeroError('Failed to delete hero slide');\n    }\n  };\n\n  const renderHeroSection = () => (\n    <div className=\"admin-hero-section\">\n      <h2>Hero Section Management</h2>\n      <button onClick={() => openHeroModal()} className=\"btn-edit\" style={{ marginBottom: 16 }}>Add New Slide</button>\n      {heroLoading ? <p>Loading...</p> : heroError ? <p style={{ color: 'red' }}>{heroError}</p> : (\n        <table className=\"admin-table\">\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Caption 1</th>\n              <th>Caption 2</th>\n              <th>Button Text</th>\n              <th>Button URL</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {heroSlides.map(slide => (\n              <tr key={slide._id}>\n                <td>{slide.image && <img src={slide.image} alt=\"hero\" style={{ width: 80, height: 40, objectFit: 'cover' }} />}</td>\n                <td>{slide.caption1}</td>\n                <td>{slide.caption2}</td>\n                <td>{slide.buttonText}</td>\n                <td><a href={slide.buttonUrl} target=\"_blank\" rel=\"noopener noreferrer\">{slide.buttonUrl}</a></td>\n                <td>\n                  <button className=\"btn-edit\" onClick={() => openHeroModal(slide)}>Edit</button>\n                  <button className=\"btn-delete\" onClick={() => handleDeleteHero(slide._id)}>Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      {showHeroModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>{editingHero ? 'Edit Slide' : 'Add Slide'}</h3>\n            <form onSubmit={handleHeroFormSubmit}>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Image</label>\n                {heroForm.image && <img src={heroForm.image} alt=\"preview\" style={{ width: 120, height: 60, objectFit: 'cover', display: 'block', marginBottom: 8 }} />}\n                <input type=\"file\" accept=\"image/*\" onChange={handleHeroImageUpload} disabled={uploading} />\n                {uploading && <span>Uploading...</span>}\n                {uploadError && <span style={{ color: 'red' }}>{uploadError}</span>}\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Caption 1</label>\n                <input type=\"text\" name=\"caption1\" value={heroForm.caption1} onChange={handleHeroFormChange} required />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Caption 2</label>\n                <input type=\"text\" name=\"caption2\" value={heroForm.caption2} onChange={handleHeroFormChange} required />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Button Text</label>\n                <input type=\"text\" name=\"buttonText\" value={heroForm.buttonText} onChange={handleHeroFormChange} required />\n              </div>\n              <div className=\"form-group\">\n                <label style={{ color: 'black' }}>Button URL</label>\n                <input type=\"text\" name=\"buttonUrl\" value={heroForm.buttonUrl} onChange={handleHeroFormChange} required />\n              </div>\n              <div className=\"form-actions\">\n                <button type=\"submit\" className=\"btn-edit\">{editingHero ? 'Update' : 'Create'}</button>\n                <button type=\"button\" className=\"btn-delete\" onClick={closeHeroModal}>Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  // Fetch real dashboard data\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        console.log('[ADMIN DASHBOARD] Fetching statistics...');\n        const response = await apiService.getAdminDashboardStats();\n        if (response.data.success) {\n          const stats = response.data.data;\n          console.log('[ADMIN DASHBOARD] Statistics received:', stats);\n          setDashboardData({\n            totalBets: stats.totalBets || 0,\n            totalDeposits: stats.totalDeposits || 0,\n            totalWithdrawals: stats.totalWithdrawals || 0,\n            activeUsers: stats.activeUsers || 0,\n            activeMatches: (stats.liveMatches || 0) + (stats.upcomingMatches || 0),\n            totalUsers: stats.totalUsers || 0,\n            totalRevenue: stats.totalRevenue || 0,\n            netProfit: stats.netProfit || 0,\n            betWinRate: stats.betWinRate || 0,\n            todayDeposits: stats.todayDeposits || 0,\n            todayWithdrawals: stats.todayWithdrawals || 0,\n            weekDeposits: stats.weekDeposits || 0,\n            weekWithdrawals: stats.weekWithdrawals || 0,\n            monthDeposits: stats.monthDeposits || 0,\n            monthWithdrawals: stats.monthWithdrawals || 0\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching dashboard stats:', err);\n        // Keep existing data or show zeros if API fails\n      }\n    };\n    \n    fetchStats();\n    \n    // Set up polling every 5 minutes\n    const interval = setInterval(fetchStats, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Auto-fetch bets when bet-management tab is active\n  useEffect(() => {\n    if (activeTab === 'bet-management') {\n      fetchBets();\n    }\n  }, [activeTab]);\n\n  // Render functions for different sections\n  const renderDashboard = () => (\n    <div className=\"admin-dashboard-content\">\n      <div className=\"kpi-cards\">\n        <div className=\"kpi-card\">\n          <h3>Total Bets</h3>\n          <p>{(dashboardData.totalBets || 0).toLocaleString()}</p>\n          <small>Win Rate: {dashboardData.betWinRate || 0}%</small>\n        </div>\n        <div className=\"kpi-card\">\n          <h3>Total Deposits</h3>\n          <p>${(dashboardData.totalDeposits || 0).toLocaleString()}</p>\n          <small>Today: ${(dashboardData.todayDeposits || 0).toLocaleString()}</small>\n        </div>\n        <div className=\"kpi-card\">\n          <h3>Active Users</h3>\n          <p>{(dashboardData.activeUsers || 0).toLocaleString()}</p>\n          <small>Total: {(dashboardData.totalUsers || 0).toLocaleString()}</small>\n        </div>\n        <div className=\"kpi-card\">\n          <h3>Active Matches</h3>\n          <p>{(dashboardData.activeMatches || 0).toLocaleString()}</p>\n          <small>Live & Upcoming</small>\n        </div>\n        <div className=\"kpi-card\">\n          <h3>Total Revenue</h3>\n          <p>${(dashboardData.totalRevenue || 0).toLocaleString()}</p>\n          <small>Net Profit: ${(dashboardData.netProfit || 0).toLocaleString()}</small>\n        </div>\n        <div className=\"kpi-card\">\n          <h3>This Month</h3>\n          <p>${(dashboardData.monthDeposits || 0).toLocaleString()}</p>\n          <small>Deposits</small>\n        </div>\n      </div>\n\n      <div className=\"charts\">\n        <div className=\"chart-container\" style={{ maxHeight: '300px' }}>\n          <h3>Betting Activity</h3>\n          <Bar ref={barChartRef} data={bettingActivityData} options={{ responsive: true, maintainAspectRatio: false }} />\n        </div>\n        <div className=\"chart-container\" style={{ maxHeight: '300px' }}>\n          <h3>Deposits & Withdrawals</h3>\n          <Line ref={lineChartRef} data={depositWithdrawalData} options={{ responsive: true, maintainAspectRatio: false }} />\n        </div>\n        <div className=\"chart-container\" style={{ maxHeight: '300px' }}>\n          <h3>User Distribution</h3>\n          <Doughnut ref={doughnutChartRef} data={userDistributionData} options={{ responsive: true, maintainAspectRatio: false }} />\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderUserManagement = () => <ManageUsers />;\n\n  // Bet management functions\n  const fetchBets = async () => {\n    try {\n      setBetLoading(true);\n      const params = new URLSearchParams({\n        page: currentBetPage,\n        limit: 50,\n        ...(betSearchQuery && { search: betSearchQuery }),\n        ...(betStatusFilter && { status: betStatusFilter })\n      });\n\n      const response = await apiService.get(`/admin/bets?${params}`);\n      setBets(response.data.bets || []);\n      setTotalBetPages(response.data.pagination?.pages || 1);\n    } catch (error) {\n      console.error('Failed to fetch bets:', error);\n      setBets([]);\n    } finally {\n      setBetLoading(false);\n    }\n  };\n\n  const handleSelectBet = (betId, checked) => {\n    if (checked) {\n      setSelectedBets(prev => [...prev, betId]);\n    } else {\n      setSelectedBets(prev => prev.filter(id => id !== betId));\n      setAllBetsSelected(false);\n    }\n  };\n\n  const handleSelectAllBets = (checked) => {\n    if (checked) {\n      setSelectedBets(bets.map(bet => bet._id));\n      setAllBetsSelected(true);\n    } else {\n      setSelectedBets([]);\n      setAllBetsSelected(false);\n    }\n  };\n\n  const handleBulkAction = async () => {\n    if (!bulkAction || selectedBets.length === 0) return;\n\n    try {\n      const response = await apiService.put('/admin/bets/bulk/status', {\n        betIds: selectedBets,\n        status: bulkAction\n      });\n\n      if (response.data.success) {\n        alert(response.data.message);\n        setSelectedBets([]);\n        setAllBetsSelected(false);\n        setBulkAction('');\n        fetchBets();\n      }\n    } catch (error) {\n      console.error('Bulk action failed:', error);\n      alert('Failed to perform bulk action');\n    }\n  };\n\n  const handleBetCancel = async (betId) => {\n    if (!window.confirm('Are you sure you want to cancel this bet?')) return;\n\n    try {\n      const response = await apiService.put(`/admin/bets/${betId}/status`, {\n        status: 'cancelled'\n      });\n\n      if (response.data.success) {\n        alert('Bet cancelled successfully');\n        fetchBets();\n      }\n    } catch (error) {\n      console.error('Failed to cancel bet:', error);\n      alert('Failed to cancel bet');\n    }\n  };\n\n  const openBetEditModal = (bet) => {\n    setBetEditModal({ open: true, bet });\n  };\n\n  const openBetSettleModal = (bet) => {\n    setBetSettleModal({ open: true, bet });\n  };\n\n  const exportBetsToCSV = () => {\n    // Check if there are bets to export\n    if (!bets || bets.length === 0) {\n      alert('No bets available to export');\n      return;\n    }\n\n    const csvData = bets.map(bet => ({\n      'Bet ID': bet._id,\n      'User': bet.userId?.username || 'N/A',\n      'Email': bet.userId?.email || 'N/A',\n      'Match': `${bet.homeTeam} vs ${bet.awayTeam}`,\n      'League': bet.league,\n      'Market': bet.market,\n      'Selection': bet.selection,\n      'Stake': bet.stake,\n      'Odds': bet.odds,\n      'Potential Win': bet.potentialWin,\n      'Status': bet.status,\n      'Created': new Date(bet.createdAt).toLocaleString()\n    }));\n\n    // Double check that csvData has content\n    if (csvData.length === 0) {\n      alert('No valid bet data to export');\n      return;\n    }\n\n    const csv = [\n      Object.keys(csvData[0]).join(','),\n      ...csvData.map(row => Object.values(row).join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `bets-export-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  // useEffect hooks - placed after function definitions\n  useEffect(() => {\n    return () => {\n      const safeDestroy = (ref) => {\n        const inst = ref?.current?.chartInstance || ref?.current;\n        if (inst && typeof inst.destroy === 'function') {\n          try { inst.destroy(); } catch (e) { /* ignore */ }\n        }\n      };\n      safeDestroy(barChartRef);\n      safeDestroy(lineChartRef);\n      safeDestroy(doughnutChartRef);\n    };\n  }, []);\n\n  // Allow selecting tab via URL query: /admin?tab=match-management\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const tab = params.get('tab');\n    if (tab) {\n      setActiveTab(tab);\n    }\n  }, [location.search]);\n\n  // Fetch bets when bet management tab is active or filters change\n  useEffect(() => {\n    if (activeTab === 'bet-management') {\n      fetchBets();\n    }\n  }, [activeTab, currentBetPage, betSearchQuery, betStatusFilter]);\n\n  // Enhanced real-time polling for bet management\n  useEffect(() => {\n    let betPollingInterval;\n    \n    if (activeTab === 'bet-management') {\n      // Initial fetch\n      setIsAutoRefreshing(true);\n      fetchBets().finally(() => setIsAutoRefreshing(false));\n      setLastRefresh(new Date());\n      \n      // Set up more frequent polling for bet data (every 30 seconds)\n      betPollingInterval = setInterval(() => {\n        console.log('[BET MANAGEMENT] Auto-refreshing bet data...');\n        setIsAutoRefreshing(true);\n        fetchBets().finally(() => {\n          setIsAutoRefreshing(false);\n          setLastRefresh(new Date());\n        });\n      }, 30000); // 30 seconds\n    }\n    \n    return () => {\n      if (betPollingInterval) {\n        clearInterval(betPollingInterval);\n      }\n    };\n  }, [activeTab]);\n\n  // Debounce search query\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (activeTab === 'bet-management') {\n        setCurrentBetPage(1);\n        fetchBets();\n      }\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [betSearchQuery, betStatusFilter]);\n\n  const renderBetManagement = () => (\n    <div className=\"admin-table-container\">\n      <div className=\"table-header\">\n        <div className=\"search-filter\">\n          <FontAwesomeIcon icon={faSearch} />\n          <input \n            type=\"text\" \n            placeholder=\"Search bets...\" \n            value={betSearchQuery}\n            onChange={(e) => setBetSearchQuery(e.target.value)}\n          />\n          <FontAwesomeIcon icon={faFilter} />\n          <select \n            value={betStatusFilter}\n            onChange={(e) => setBetStatusFilter(e.target.value)}\n          >\n            <option value=\"\">All Status</option>\n            <option value=\"pending\">Pending</option>\n            <option value=\"won\">Won</option>\n            <option value=\"lost\">Lost</option>\n            <option value=\"cancelled\">Cancelled</option>\n            <option value=\"void\">Void</option>\n          </select>\n          <button \n            className=\"btn-refresh\"\n            onClick={fetchBets}\n            disabled={betLoading}\n          >\n            {betLoading ? 'Loading...' : 'Refresh'}\n          </button>\n        </div>\n        \n        {/* Real-time data indicator */}\n        <div className=\"real-time-indicator\">\n          <div className=\"refresh-status\">\n            {isAutoRefreshing ? (\n              <span className=\"refreshing\">\n                <span className=\"spinner\"></span>\n                Auto-refreshing...\n              </span>\n            ) : (\n              <span className=\"idle\">\n                <span className=\"status-dot\"></span>\n                Live Data\n              </span>\n            )}\n          </div>\n          {lastRefresh && (\n            <div className=\"last-refresh\">\n              Last updated: {lastRefresh.toLocaleTimeString()}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {betLoading ? (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Loading bets...</p>\n        </div>\n      ) : (\n        <>\n          <table className=\"admin-table\">\n            <thead>\n              <tr>\n                <th>\n                  <input \n                    type=\"checkbox\" \n                    checked={allBetsSelected}\n                    onChange={handleSelectAllBets}\n                  />\n                </th>\n                <th>Bet ID</th>\n                <th>User</th>\n                <th>Match</th>\n                <th>Market</th>\n                <th>Selection</th>\n                <th>Stake</th>\n                <th>Odds</th>\n                <th>Potential Win</th>\n                <th>Status</th>\n                <th>Created</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {bets.map(bet => (\n                <tr key={bet._id} className={selectedBets.includes(bet._id) ? 'selected' : ''}>\n                  <td>\n                    <input \n                      type=\"checkbox\" \n                      checked={selectedBets.includes(bet._id)}\n                      onChange={(e) => handleSelectBet(bet._id, e.target.checked)}\n                    />\n                  </td>\n                  <td>{bet._id.slice(-8)}</td>\n                  <td>\n                    {bet.userId ? (\n                      <div className=\"user-info\">\n                        <div className=\"username\">{bet.userId.username}</div>\n                        <div className=\"email\">{bet.userId.email}</div>\n                      </div>\n                    ) : 'N/A'}\n                  </td>\n                  <td>\n                    <div className=\"match-info\">\n                      <div className=\"teams\">{bet.homeTeam} vs {bet.awayTeam}</div>\n                      <div className=\"league\">{bet.league}</div>\n                    </div>\n                  </td>\n                  <td>{bet.market}</td>\n                  <td>{bet.selection}</td>\n                  <td>${bet.stake?.toFixed(2)}</td>\n                  <td>{bet.odds}</td>\n                  <td>${bet.potentialWin?.toFixed(2)}</td>\n                  <td>\n                    <span className={`status-badge ${bet.status}`}>\n                      {bet.status}\n                    </span>\n                  </td>\n                  <td>\n                    {new Date(bet.createdAt).toLocaleDateString()}\n                  </td>\n                  <td>\n                    <div className=\"action-buttons\">\n                      <button \n                        className=\"btn-edit\"\n                        onClick={() => openBetEditModal(bet)}\n                      >\n                        Edit\n                      </button>\n                      <button \n                        className=\"btn-settle\"\n                        onClick={() => openBetSettleModal(bet)}\n                      >\n                        Settle\n                      </button>\n                      <button \n                        className=\"btn-cancel\"\n                        onClick={() => handleBetCancel(bet._id)}\n                        disabled={bet.status !== 'pending'}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          \n          {selectedBets.length > 0 && (\n            <div className=\"bulk-actions\">\n              <span>{selectedBets.length} bets selected</span>\n              <select \n                value={bulkAction}\n                onChange={(e) => setBulkAction(e.target.value)}\n              >\n                <option value=\"\">Bulk Actions</option>\n                <option value=\"won\">Mark as Won</option>\n                <option value=\"lost\">Mark as Lost</option>\n                <option value=\"void\">Mark as Void</option>\n                <option value=\"cancelled\">Cancel</option>\n              </select>\n              <button \n                className=\"btn-apply-bulk\"\n                onClick={handleBulkAction}\n                disabled={!bulkAction}\n              >\n                Apply\n              </button>\n            </div>\n          )}\n          \n          <div className=\"table-footer\">\n            <div className=\"pagination\">\n              <button \n                onClick={() => setCurrentBetPage(prev => Math.max(1, prev - 1))}\n                disabled={currentBetPage === 1}\n              >\n                Previous\n              </button>\n              <span>Page {currentBetPage} of {totalBetPages}</span>\n              <button \n                onClick={() => setCurrentBetPage(prev => Math.min(totalBetPages, prev + 1))}\n                disabled={currentBetPage === totalBetPages}\n              >\n                Next\n              </button>\n            </div>\n            <button className=\"btn-export\" onClick={exportBetsToCSV}>\n              Export to CSV\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n\n\n\n  const renderSettings = () => (\n    <div className=\"admin-settings-container\">\n      <div className=\"settings-section\">\n        <h3>Payment Gateways</h3>\n        <div className=\"toggle-group\">\n          <label>\n            <input type=\"checkbox\" /> Stripe\n          </label>\n          <label>\n            <input type=\"checkbox\" /> PayPal\n          </label>\n          <label>\n            <input type=\"checkbox\" /> Bank Transfer\n          </label>\n        </div>\n      </div>\n\n      <div className=\"settings-section\">\n        <h3>Email Templates</h3>\n        <div className=\"template-selector\">\n          <select>\n            <option>Welcome Email</option>\n            <option>Deposit Confirmation</option>\n            <option>Withdrawal Request</option>\n          </select>\n          <button className=\"btn-edit-template\">Edit Template</button>\n        </div>\n      </div>\n\n      <div className=\"settings-section\">\n        <h3>System Configuration</h3>\n        <div className=\"form-group\">\n          <label style={{ color: 'black' }}>Default Currency</label>\n          <select>\n            <option>USD</option>\n            <option>EUR</option>\n            <option>GBP</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>\n            <input type=\"checkbox\" /> Enable GDPR Compliance\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={`admin-dashboard ${sidebarCollapsed ? 'collapsed' : ''}`}>\n      <div className=\"admin-sidebar\">\n        <div className=\"sidebar-header\">\n          <h2>Admin Panel</h2>\n          <button \n            className=\"collapse-btn\"\n            onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\n          >\n            {sidebarCollapsed ? '>' : '<'}\n          </button>\n        </div>\n        <nav className=\"sidebar-nav\">\n          <ul>\n            <li \n              className={activeTab === 'dashboard' ? 'active' : ''}\n              onClick={() => setActiveTab('dashboard')}\n            >\n              <FontAwesomeIcon icon={faChartLine} />\n              {!sidebarCollapsed && <span>Dashboard</span>}\n            </li>\n            <li \n              className={activeTab === 'user-management' ? 'active' : ''}\n              onClick={() => setActiveTab('user-management')}\n            >\n              <FontAwesomeIcon icon={faUsers} />\n              {!sidebarCollapsed && <span>User Management</span>}\n            </li>\n            <li \n              className={activeTab === 'bet-management' ? 'active' : ''}\n              onClick={() => setActiveTab('bet-management')}\n            >\n              <FontAwesomeIcon icon={faMoneyBillWave} />\n              {!sidebarCollapsed && <span>Bet Management</span>}\n            </li>\n            <li \n              className={activeTab === 'match-management' ? 'active' : ''}\n              onClick={() => setActiveTab('match-management')}\n            >\n              <FontAwesomeIcon icon={faFutbol} />\n              {!sidebarCollapsed && <span>Match Management</span>}\n            </li>\n            <li \n              className={activeTab === 'hero' ? 'active' : ''}\n              onClick={() => setActiveTab('hero')}\n            >\n              <FontAwesomeIcon icon={faFileAlt} />\n              {!sidebarCollapsed && <span>Hero Section</span>}\n            </li>\n            <li \n              className={activeTab === 'settings' ? 'active' : ''}\n              onClick={() => setActiveTab('settings')}\n            >\n              <FontAwesomeIcon icon={faCog} />\n              {!sidebarCollapsed && <span>Settings</span>}\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <div className=\"admin-main-content\">\n        {activeTab === 'dashboard' && renderDashboard()}\n        {activeTab === 'user-management' && renderUserManagement()}\n        {activeTab === 'bet-management' && renderBetManagement()}\n        {activeTab === 'match-management' && <ManageMatches />}\n        {activeTab === 'hero' && renderHeroSection()}\n        {activeTab === 'settings' && renderSettings()}\n      </div>\n\n      {/* Bet Edit Modal */}\n      {betEditModal.open && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h3>Edit Bet</h3>\n              <button \n                className=\"modal-close\"\n                onClick={() => setBetEditModal({ open: false, bet: null })}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <form onSubmit={async (e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                const stake = parseFloat(formData.get('stake'));\n                const odds = parseFloat(formData.get('odds'));\n                const selection = formData.get('selection');\n                const market = formData.get('market');\n\n                try {\n                  const response = await apiService.put(`/admin/bets/${betEditModal.bet._id}`, {\n                    stake,\n                    odds,\n                    selection,\n                    market\n                  });\n\n                  if (response.data.success) {\n                    alert('Bet updated successfully');\n                    setBetEditModal({ open: false, bet: null });\n                    fetchBets(); // Refresh the bet list\n                  }\n                } catch (error) {\n                  console.error('Failed to update bet:', error);\n                  alert('Failed to update bet: ' + (error.response?.data?.error || error.message));\n                }\n              }}>\n                <div className=\"form-group\">\n                  <label style={{ color: 'black' }}>Stake:</label>\n                  <input \n                    name=\"stake\"\n                    type=\"number\" \n                    step=\"0.01\" \n                    min=\"0.01\"\n                    defaultValue={betEditModal.bet?.stake}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label style={{ color: 'black' }}>Odds:</label>\n                  <input \n                    name=\"odds\"\n                    type=\"number\" \n                    step=\"0.01\" \n                    min=\"1.01\"\n                    defaultValue={betEditModal.bet?.odds}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label style={{ color: 'black' }}>Selection:</label>\n                  <input \n                    name=\"selection\"\n                    type=\"text\"\n                    defaultValue={betEditModal.bet?.selection}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label style={{ color: 'black' }}>Market:</label>\n                  <input \n                    name=\"market\"\n                    type=\"text\"\n                    defaultValue={betEditModal.bet?.market}\n                    required\n                  />\n                </div>\n                <div className=\"form-actions\">\n                  <button type=\"button\" onClick={() => setBetEditModal({ open: false, bet: null })}>\n                    Cancel\n                  </button>\n                  <button type=\"submit\">Save Changes</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Bet Settle Modal */}\n      {betSettleModal.open && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h3>Settle Bet</h3>\n              <button \n                className=\"modal-close\"\n                onClick={() => setBetSettleModal({ open: false, bet: null })}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <form onSubmit={async (e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                const status = formData.get('status');\n                const actualWin = parseFloat(formData.get('actualWin')) || 0;\n\n                try {\n                  const response = await apiService.put(`/admin/bets/${betSettleModal.bet._id}/status`, {\n                    status,\n                    actualWin: status === 'won' ? actualWin : 0\n                  });\n\n                  if (response.data.success) {\n                    alert(`Bet ${status} successfully`);\n                    setBetSettleModal({ open: false, bet: null });\n                    fetchBets(); // Refresh the bet list\n                  }\n                } catch (error) {\n                  console.error('Failed to settle bet:', error);\n                  alert('Failed to settle bet: ' + (error.response?.data?.error || error.message));\n                }\n              }}>\n                <div className=\"bet-info\">\n                  <p><strong>User:</strong> {betSettleModal.bet?.userId?.username}</p>\n                  <p><strong>Match:</strong> {betSettleModal.bet?.homeTeam} vs {betSettleModal.bet?.awayTeam}</p>\n                  <p><strong>Selection:</strong> {betSettleModal.bet?.selection}</p>\n                  <p><strong>Stake:</strong> ${betSettleModal.bet?.stake}</p>\n                  <p><strong>Potential Win:</strong> ${betSettleModal.bet?.potentialWin}</p>\n                </div>\n                <div className=\"form-group\">\n                  <label style={{ color: 'black' }}>Status:</label>\n                  <select name=\"status\" required>\n                    <option value=\"won\">Won</option>\n                    <option value=\"lost\">Lost</option>\n                    <option value=\"void\">Void</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label style={{ color: 'black' }}>Actual Win Amount:</label>\n                  <input \n                    name=\"actualWin\"\n                    type=\"number\" \n                    step=\"0.01\" \n                    min=\"0\"\n                    placeholder=\"Enter actual win amount\"\n                    defaultValue={betSettleModal.bet?.potentialWin}\n                  />\n                  <small style={{ color: '#666', fontSize: '12px' }}>\n                    Leave empty or 0 for lost/void bets. For won bets, enter the actual payout amount.\n                  </small>\n                </div>\n                <div className=\"form-actions\">\n                  <button type=\"button\" onClick={() => setBetSettleModal({ open: false, bet: null })}>\n                    Cancel\n                  </button>\n                  <button type=\"submit\">Settle Bet</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;","import React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, ArcElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport AdminDashboardComponent from '../components/admin/AdminDashboard';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst AdminDashboard = () => {\r\n  return (\r\n    <AdminDashboardComponent />\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"names":["ManageMatches","matches","setMatches","useState","leagues","setLeagues","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","currentMatch","setCurrentMatch","formData","setFormData","leagueName","sport","homeTeam","awayTeam","startTime","status","homeScore","awayScore","odds","videoUrl","videoPosterUrl","showAddLeague","setShowAddLeague","newLeagueName","setNewLeagueName","saveMessage","setSaveMessage","autoLeagueId","setAutoLeagueId","autoExternalId","setAutoExternalId","searchQuery","setSearchQuery","searchPerformed","setSearchPerformed","filteredMatches","setFilteredMatches","selectedMatches","setSelectedMatches","allMatchesSelected","setAllMatchesSelected","bulkAction","setBulkAction","statusFilter","setStatusFilter","useEffect","fetchMatches","fetchLeagues","async","response","apiService","getAllMatches","data","err","console","res","getLeagues","leagueId","toLowerCase","replace","prefix","split","map","w","join","toUpperCase","slice","leagueMatches","filter","m","externalId","startsWith","nextNum","length","nums","match","parseInt","Math","max","concat","String","padStart","handleInputChange","e","name","value","target","_objectSpread","handleOddsChange","closeModal","_jsx","className","children","_jsxs","onClick","openCreateModal","type","placeholder","onChange","preventDefault","trim","query","_leagues$find2","_match$homeTeam","_match$awayTeam","league","find","l","matchesSearch","includes","matchesStatus","handleShowAll","handleClearSearch","checked","allMatchIds","_id","handleSelectAllMatches","_match$leagueId","handleSelectMatch","matchId","prev","id","Date","toLocaleDateString","toLocaleTimeString","Object","keys","_leagues$find","openEditModal","window","confirm","deleteMatch","handleDeleteMatch","promises","updateMatch","Promise","resolve","all","setTimeout","disabled","onSubmit","payload","teams","home","away","toISOString","undefined","_res$data","addMatch","newId","style","color","required","accept","_e$target$files","file","files","fd","FormData","append","uploadMatchVideo","res2","uploadMatchVideoFallback","err2","res3","uploadVideoTemp","err3","res4","uploadVideoTempFallback","err4","_err4$response","_err4$response$data","msg","message","alert","_err2$response","_err2$response$data","_e$target$files2","uploadMatchPoster","uploadMatchPosterFallback","uploadPosterTemp","uploadPosterTempFallback","_err4$response2","_err4$response2$data","_err2$response2","_err2$response2$data","readOnly","step","homeWin","draw","awayWin","total","over","under","handicapLine","homeHandicap","awayHandicap","ActionDropdown","_ref","user","onEdit","onDelete","onBlock","onUnblock","isOpen","setIsOpen","handleAction","action","actionFn","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_Fragment","isBlocked","ManageUsers","users","setUsers","currentUser","setCurrentUser","username","email","isAdmin","balance","fetchUsers","getAdminUsers","handleDeleteUser","deleteUser","handleBlockUser","blockUser","handleUnblockUser","unblockUser","toFixed","updateUser","constructor","this","ws","reconnectAttempts","maxReconnectAttempts","reconnectDelay","listeners","Map","isConnected","connect","token","readyState","WebSocket","OPEN","wsUrl","process","REACT_APP_WS_URL","onopen","log","emit","onmessage","event","JSON","parse","handleMessage","onclose","code","reason","scheduleReconnect","onerror","delay","pow","localStorage","getItem","send","arguments","stringify","warn","subscribeToMatch","unsubscribeFromMatch","subscribeToUserBets","userId","unsubscribeFromUserBets","subscribeToLiveMatches","unsubscribeFromLiveMatches","requestLiveMatches","requestBetStatus","betId","startHeartbeat","heartbeatInterval","setInterval","CLOSED","reconnect","stopHeartbeat","clearInterval","on","callback","has","set","get","push","off","callbacks","index","indexOf","splice","forEach","disconnect","close","getConnectionStatus","ChartJS","register","CategoryScale","LinearScale","BarElement","PointElement","LineElement","ArcElement","Title","Tooltip","Legend","AdminDashboard","_betEditModal$bet","_betEditModal$bet2","_betEditModal$bet3","_betEditModal$bet4","_betSettleModal$bet","_betSettleModal$bet$u","_betSettleModal$bet2","_betSettleModal$bet3","_betSettleModal$bet4","_betSettleModal$bet5","_betSettleModal$bet6","_betSettleModal$bet7","barChartRef","useRef","lineChartRef","doughnutChartRef","activeTab","setActiveTab","sidebarCollapsed","setSidebarCollapsed","location","useLocation","dashboardData","setDashboardData","totalBets","totalDeposits","activeUsers","activeMatches","bets","setBets","betLoading","setBetLoading","betSearchQuery","setBetSearchQuery","betStatusFilter","setBetStatusFilter","currentBetPage","setCurrentBetPage","totalBetPages","setTotalBetPages","selectedBets","setSelectedBets","allBetsSelected","setAllBetsSelected","betEditModal","setBetEditModal","open","bet","betSettleModal","setBetSettleModal","lastRefresh","setLastRefresh","isAutoRefreshing","setIsAutoRefreshing","WebSocketService","handleBetStatusUpdate","prevBets","actualWin","updatedAt","handleNewBet","shouldIncludeBet","handleBetUpdate","_bet$userId","_bet$userId$username","_bet$userId2","_bet$userId2$email","_bet$homeTeam","_bet$awayTeam","_bet$league","_bet$market","_bet$selection","searchLower","market","selection","bettingActivityData","labels","datasets","label","backgroundColor","depositWithdrawalData","borderColor","userDistributionData","heroSlides","setHeroSlides","heroLoading","setHeroLoading","heroError","setHeroError","showHeroModal","setShowHeroModal","editingHero","setEditingHero","heroForm","setHeroForm","image","caption1","caption2","buttonText","buttonUrl","uploading","setUploading","uploadError","setUploadError","fetchHeroSlides","getHeroSlides","openHeroModal","slide","closeHeroModal","handleHeroFormChange","handleHeroImageUpload","uploadHeroImage","imageUrl","handleHeroFormSubmit","updateHeroSlide","createHeroSlide","fetchStats","getAdminDashboardStats","success","stats","totalWithdrawals","liveMatches","upcomingMatches","totalUsers","totalRevenue","netProfit","betWinRate","todayDeposits","todayWithdrawals","weekDeposits","weekWithdrawals","monthDeposits","monthWithdrawals","interval","fetchBets","_response$data$pagina","params","URLSearchParams","page","limit","search","pagination","pages","handleSelectAllBets","handleBulkAction","put","betIds","exportBetsToCSV","csvData","_bet$userId3","_bet$userId4","stake","potentialWin","createdAt","toLocaleString","csv","row","values","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","safeDestroy","ref","_ref$current","inst","current","chartInstance","destroy","tab","betPollingInterval","finally","timer","clearTimeout","FontAwesomeIcon","icon","faChartLine","faUsers","faMoneyBillWave","faFutbol","faFileAlt","faCog","maxHeight","Bar","options","responsive","maintainAspectRatio","Line","Doughnut","faSearch","faFilter","_bet$stake","_bet$potentialWin","handleSelectBet","openBetEditModal","openBetSettleModal","handleBetCancel","min","marginBottom","src","alt","width","height","objectFit","rel","deleteHeroSlide","handleDeleteHero","display","parseFloat","_error$response","_error$response$data","defaultValue","_error$response2","_error$response2$data","fontSize","AdminDashboardComponent"],"sourceRoot":""}