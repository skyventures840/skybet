{"version":3,"file":"static/js/897.19360db2.chunk.js","mappings":"wLAGA,MA8GA,EA9GsBA,IAAgB,IAAf,MAAEC,GAAOD,EAC9B,MAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGXC,EAAmB,CACvB,SAAY,oBACZ,OAAU,oBACV,WAAc,aACd,OAAU,SACV,SAAY,WACZ,OAAU,SACV,aAAc,cA0DhB,OAvDAC,EAAAA,EAAAA,WAAU,KAER,MAAMC,EAAeJ,EAASK,SAASC,MAAM,KACvCC,EAAcH,EAAaA,EAAaI,OAAS,GACjDC,EAAYL,EAAa,GAE/BM,QAAQC,IAAI,gBAADC,OAAiBL,EAAW,mBAAAK,OAAkBH,EAAS,qBAAAG,OAAoBf,EAAK,kBAG3FC,EAAS,IAAK,CAAEe,SAAS,IAGzBC,WAAW,KAET,MAAMC,EAAkBb,EAAiBL,IAAUA,EAQnD,GALAmB,OAAOC,cAAc,IAAIC,YAAY,gBAAiB,CACpDC,OAAQ,CAAEC,OAAQL,MAIhBR,GAAeA,IAAgBE,EAAW,CAC5C,MAAMY,EAAuBd,EAC1BM,QAAQ,KAAM,KACdA,QAAQ,QAASS,GAAKA,EAAEC,eAE3Bb,QAAQC,IAAI,wCAADC,OAAyCS,IAEpDL,OAAOC,cAAc,IAAIC,YAAY,oBAAqB,CACxDC,OAAQ,CACNtB,MAAOkB,EACPR,YAAac,KAGnB,GACC,MACF,CAACvB,EAAUE,EAASK,SAAUR,KAGjCM,EAAAA,EAAAA,WAAU,KACR,MAAMqB,EAAQC,SAASC,cAAc,SASrC,OARAF,EAAMG,YAAW,8IAMjBF,SAASG,KAAKC,YAAYL,GAEnB,KACLC,SAASG,KAAKE,YAAYN,KAE3B,KAGDO,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA2BR,MAAO,CAC/CS,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,gBAAiB,UACjBC,QAAS,QACTC,UACAC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,mBAAmBR,MAAO,CACvCiB,UAAW,SACXH,QAAS,OACTD,gBAAiB,QACjBK,aAAc,MACdC,UAAW,6BACXC,SAAU,SACVL,SAAA,EACAR,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CACVqB,MAAO,OACPT,OAAQ,OACRU,OAAQ,oBACRC,UAAW,oBACXL,aAAc,MACdM,UAAW,uCACXC,OAAQ,kBAEVT,EAAAA,EAAAA,MAAA,KAAGhB,MAAO,CACRyB,OAAQ,IACRC,MAAO,OACPC,SAAU,OACVC,WAAY,OACZb,SAAA,CAAC,0BACqBR,EAAAA,EAAAA,KAAA,SAAK,kBACXlC,EAAM,sB","sources":["components/SportFallback.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst SportFallback = ({ sport }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Mapping for sport name variations to ensure correct filtering\r\n  const sportNameMapping = {\r\n    'Football': 'Football / Soccer',\r\n    'Soccer': 'Football / Soccer',\r\n    'Basketball': 'Basketball',\r\n    'Tennis': 'Tennis',\r\n    'Baseball': 'Baseball',\r\n    'Hockey': 'Hockey',\r\n    'Ice Hockey': 'Ice Hockey'\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Extract subcategory from the URL path\r\n    const pathSegments = location.pathname.split('/');\r\n    const subcategory = pathSegments[pathSegments.length - 1];\r\n    const mainSport = pathSegments[1]; // Get the main sport from URL (e.g., 'soccer' from '/soccer/epl')\r\n    \r\n    console.log(`Subcategory \"${subcategory}\" not found in ${mainSport}, redirecting to ${sport} on home page`);\r\n    \r\n    // Navigate to home page\r\n    navigate('/', { replace: true });\r\n    \r\n    // Apply sport filter after navigation\r\n    setTimeout(() => {\r\n      // Use mapped sport name for better filtering\r\n      const mappedSportName = sportNameMapping[sport] || sport;\r\n      \r\n      // Dispatch main sport filter event\r\n      window.dispatchEvent(new CustomEvent('sidebarFilter', { \r\n        detail: { filter: mappedSportName } \r\n      }));\r\n      \r\n      // Also dispatch subcategory filter if we want to attempt filtering by subcategory name\r\n      if (subcategory && subcategory !== mainSport) {\r\n        const formattedSubcategory = subcategory\r\n          .replace(/-/g, ' ')\r\n          .replace(/\\b\\w/g, l => l.toUpperCase());\r\n          \r\n        console.log(`Attempting to filter by subcategory: ${formattedSubcategory}`);\r\n        \r\n        window.dispatchEvent(new CustomEvent('subcategoryFilter', { \r\n          detail: { \r\n            sport: mappedSportName,\r\n            subcategory: formattedSubcategory\r\n          } \r\n        }));\r\n      }\r\n    }, 100);\r\n  }, [navigate, location.pathname, sport]);\r\n\r\n  // Add global CSS for spinner animation\r\n  useEffect(() => {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      @keyframes sportFallbackSpin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n    \r\n    return () => {\r\n      document.head.removeChild(style);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sport-fallback-container\" style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '200px',\r\n      backgroundColor: '#f8f9fa',\r\n      padding: '20px'\r\n    }}>\r\n      <div className=\"fallback-message\" style={{\r\n        textAlign: 'center',\r\n        padding: '30px',\r\n        backgroundColor: 'white',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\r\n        maxWidth: '300px'\r\n      }}>\r\n        <div style={{\r\n          width: '30px',\r\n          height: '30px',\r\n          border: '3px solid #f3f3f3',\r\n          borderTop: '3px solid #007bff',\r\n          borderRadius: '50%',\r\n          animation: 'sportFallbackSpin 1s linear infinite',\r\n          margin: '0 auto 15px'\r\n        }}></div>\r\n        <p style={{ \r\n          margin: '0', \r\n          color: '#666',\r\n          fontSize: '14px',\r\n          fontWeight: '500'\r\n        }}>\r\n          Subcategory not found.<br/>\r\n          Redirecting to {sport} matches...\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SportFallback; "],"names":["_ref","sport","navigate","useNavigate","location","useLocation","sportNameMapping","useEffect","pathSegments","pathname","split","subcategory","length","mainSport","console","log","concat","replace","setTimeout","mappedSportName","window","dispatchEvent","CustomEvent","detail","filter","formattedSubcategory","l","toUpperCase","style","document","createElement","textContent","head","appendChild","removeChild","_jsx","className","display","justifyContent","alignItems","height","backgroundColor","padding","children","_jsxs","textAlign","borderRadius","boxShadow","maxWidth","width","border","borderTop","animation","margin","color","fontSize","fontWeight"],"sourceRoot":""}