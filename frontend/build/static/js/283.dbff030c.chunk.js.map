{"version":3,"file":"static/js/283.dbff030c.chunk.js","mappings":"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","sources":["utils/riskManagement.js","pages/MatchDetail.js","components/VideoPlayerScheduled.js","components/LockedOdds.js","utils/marketTitles.js"],"sourcesContent":["const DISABLE_ODDS_LOCK = process.env.REACT_APP_DISABLE_ODDS_LOCK === 'true';\r\n\r\nexport const RISK_THRESHOLDS = {\r\n  // Minimum odds allowed (below this is risky): relax slightly to avoid over-locking\r\n  MIN_ODDS: 1.11,\r\n  \r\n  MAX_ODDS: 50.0,\r\n  \r\n  LIVE_RISK_MULTIPLIER: 1.5,\r\n  \r\n  LIVE_SCORE_DIFFERENCE_THRESHOLD: 3,\r\n  \r\n  LIVE_TIME_THRESHOLD_MINUTES: 10,\r\n  \r\n  OBVIOUS_WIN_THRESHOLD: 1.11,\r\n  OBVIOUS_LOSS_THRESHOLD: 50.0,\r\n};\r\n\r\n/**\r\n * Check if odds are too low (high risk)\r\n * @param {number} odds - The odds value\r\n * @returns {boolean} - True if odds are too low\r\n */\r\nexport const isOddsTooLow = (odds) => {\r\n  if (!odds || typeof odds !== 'number') return false;\r\n  return odds < RISK_THRESHOLDS.MIN_ODDS;\r\n};\r\n\r\n/**\r\n * Check if odds are too high (too obvious)\r\n * @param {number} odds - The odds value\r\n * @returns {boolean} - True if odds are too high\r\n */\r\nexport const isOddsTooHigh = (odds) => {\r\n  if (!odds || typeof odds !== 'number') return false;\r\n  return odds > RISK_THRESHOLDS.MAX_ODDS;\r\n};\r\n\r\n/**\r\n * Check if live match has obvious outcome based on score\r\n * @param {Object} match - Match object\r\n * @returns {boolean} - True if outcome is too obvious\r\n */\r\nexport const isLiveMatchObvious = (match) => {\r\n  if (!match.isLive && match.status !== 'live') return false;\r\n  \r\n  if (match.homeScore !== undefined && match.awayScore !== undefined) {\r\n    const scoreDiff = Math.abs(match.homeScore - match.awayScore);\r\n    if (scoreDiff >= RISK_THRESHOLDS.LIVE_SCORE_DIFFERENCE_THRESHOLD) {\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  // Check if match is in final minutes\r\n  if (match.startTime) {\r\n    const startTime = new Date(match.startTime);\r\n    const now = new Date();\r\n    const matchDuration = 90; // Assuming 90 minutes for soccer\r\n    const elapsedMinutes = (now - startTime) / (1000 * 60);\r\n    const remainingMinutes = matchDuration - elapsedMinutes;\r\n    \r\n    if (remainingMinutes <= RISK_THRESHOLDS.LIVE_TIME_THRESHOLD_MINUTES) {\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  return false;\r\n};\r\n\r\n/**\r\n * Check if odds represent an obvious outcome\r\n * @param {number} odds - The odds value\r\n * @returns {boolean} - True if outcome is too obvious\r\n */\r\nexport const isObviousOutcome = (odds) => {\r\n  if (!odds || typeof odds !== 'number') return false;\r\n  \r\n  // Only very low odds (below 1.14) are considered risky\r\n  if (odds <= RISK_THRESHOLDS.OBVIOUS_WIN_THRESHOLD) return true;\r\n  \r\n  return false;\r\n};\r\n\r\n/**\r\n * Main function to determine if odds should be disabled\r\n * @param {Object} match - Match object\r\n * @param {number} odds - The odds value\r\n * @param {string} oddsType - Type of odds (1, X, 2, etc.)\r\n * @returns {Object} - Risk assessment result\r\n */\r\nexport const assessOddsRisk = (match, odds, oddsType) => {\r\n  // Environment override to never lock odds (useful for production hosting issues)\r\n  if (DISABLE_ODDS_LOCK) {\r\n    return {\r\n      shouldDisable: false,\r\n      reason: null,\r\n      riskLevel: 'none',\r\n      riskFactors: []\r\n    };\r\n  }\r\n\r\n  if (!odds || typeof odds !== 'number') {\r\n    return {\r\n      shouldDisable: false,\r\n      reason: null,\r\n      riskLevel: 'none'\r\n    };\r\n  }\r\n  \r\n  const riskFactors = [];\r\n  let riskLevel = 'low';\r\n  \r\n  // Check if odds are too low\r\n  if (isOddsTooLow(odds)) {\r\n    riskFactors.push('odds_too_low');\r\n    riskLevel = 'high';\r\n  }\r\n  \r\n  // Check if outcome is too obvious (only low odds below 1.14 are considered risky)\r\n  if (isObviousOutcome(odds)) {\r\n    riskFactors.push('obvious_outcome');\r\n    riskLevel = 'high';\r\n  }\r\n  \r\n  // Check live match specific risks\r\n  if (match.isLive || match.status === 'live') {\r\n    if (isLiveMatchObvious(match)) {\r\n      riskFactors.push('live_match_obvious');\r\n      riskLevel = 'high';\r\n    } else {\r\n      riskLevel = 'medium'; // Live matches are inherently riskier\r\n    }\r\n  }\r\n  \r\n  // Check for specific odds type risks\r\n  if (oddsType === 'X' && odds < 1.50) {\r\n    // Draw odds below 1.50 are suspicious\r\n    riskFactors.push('suspicious_draw_odds');\r\n    riskLevel = 'medium';\r\n  }\r\n  \r\n  // Only lock live odds for truly high-risk scenarios\r\n  const isLive = match?.isLive || match?.status === 'live';\r\n  let shouldDisable;\r\n  if (isLive) {\r\n    // For live matches, disable ONLY when the live state is obviously risky\r\n    // i.e., outcome is obvious based on score/time\r\n    shouldDisable = riskFactors.includes('live_match_obvious');\r\n  } else {\r\n    // Pre-match: disable when overall risk is high\r\n    shouldDisable = riskLevel === 'high';\r\n  }\r\n\r\n  return {\r\n    shouldDisable,\r\n    reason: riskFactors.length > 0 ? riskFactors.join(', ') : null,\r\n    riskLevel,\r\n    riskFactors\r\n  };\r\n};\r\n\r\n/**\r\n * Get risk level display text\r\n * @param {string} riskLevel - Risk level\r\n * @returns {string} - Display text\r\n */\r\nexport const getRiskLevelText = (riskLevel) => {\r\n  switch (riskLevel) {\r\n    case 'high':\r\n      return 'High Risk - Odds Disabled';\r\n    case 'medium':\r\n      return 'Medium Risk';\r\n    case 'low':\r\n      return 'Low Risk';\r\n    default:\r\n      return 'Unknown Risk';\r\n  }\r\n};\r\n\r\n/**\r\n * Get risk reason display text\r\n * @param {Array} riskFactors - Array of risk factors\r\n * @returns {string} - Human readable risk reason\r\n */\r\nexport const getRiskReasonText = (riskFactors) => {\r\n  if (!riskFactors || riskFactors.length === 0) return '';\r\n  \r\n  const reasonMap = {\r\n    'odds_too_low': 'Odds too low',\r\n    'obvious_outcome': 'Odds too low (below 1.11)',\r\n    'live_match_obvious': 'Live match outcome obvious',\r\n    'suspicious_draw_odds': 'Suspicious draw odds'\r\n  };\r\n  \r\n  return riskFactors.map(factor => reasonMap[factor] || factor).join(', ');\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport apiService from '../services/api';\nimport getMarketTitle, { normalizeMarketKey } from '../utils/marketTitles';\nimport VideoPlayerScheduled from '../components/VideoPlayerScheduled';\nimport { assessOddsRisk } from '../utils/riskManagement';\nimport LockedOdds from '../components/LockedOdds';\n\nconst MatchDetail = () => {\n    const { matchId } = useParams();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [match, setMatch] = useState(null);\n    const [expandedMarkets, setExpandedMarkets] = useState({});\n    const [selectedTab, setSelectedTab] = useState('regular');\n    const [allMarketsExpanded, setAllMarketsExpanded] = useState(false);\n\n    useEffect(() => {\n        // Check if user came from additional markets button\n        const urlParams = new URLSearchParams(window.location.search);\n        const fromAdditionalMarkets = urlParams.get('from') === 'additional';\n        \n        if (fromAdditionalMarkets) {\n            setAllMarketsExpanded(true);\n        }\n        \n        // Always fetch real match data from API/database - no test mode\n        const fetchMatch = async () => {\n            try {\n                console.log('Fetching real match data for ID:', matchId);\n                const response = await apiService.getMatchById(matchId);\n                const matchData = response.data.match || response.data;\n                \n                console.log('Raw match data received:', matchData);\n                \n                // Transform odds API data to MatchDetail format\n                const transformedMatch = transformOddsToMatchDetail(matchData);\n                console.log('Transformed match data:', transformedMatch);\n                \n                setMatch(transformedMatch);\n            } catch (err) {\n                console.error('Error fetching match:', err);\n                console.error('Error details:', {\n                    status: err.response?.status,\n                    statusText: err.response?.statusText,\n                    data: err.response?.data\n                });\n                setMatch(null);\n            }\n        };\n        \n        if (matchId) {\n            fetchMatch();\n        } else {\n            console.error('No matchId provided');\n            setMatch(null);\n        }\n    }, [matchId]);\n\n    // Transform odds API data to MatchDetail format\n    const transformOddsToMatchDetail = (matchData) => {\n        console.log('Transforming match data:', matchData);\n        \n        if (!matchData) {\n            console.log('No match data to transform');\n            return null;\n        }\n        \n        // Handle internal database format (from /api/matches/:id)\n        if (matchData._id && matchData.odds && !matchData.bookmakers) {\n            console.log('Processing internal database format');\n            \n            const markets = {};\n            let marketIndex = 0;\n            \n            // Convert odds Map to markets\n            if (matchData.odds && typeof matchData.odds === 'object') {\n                const oddsData = matchData.odds;\n                \n                // Match Winner market\n                if (oddsData.homeWin || oddsData.awayWin || oddsData.draw) {\n                    const marketKey = `market_${marketIndex}`;\n                    const options = [];\n                    \n                    if (oddsData.homeWin && oddsData.homeWin > 0) {\n                        options.push({ name: matchData.homeTeam, odds: oddsData.homeWin });\n                    }\n                    if (oddsData.draw && oddsData.draw > 0) {\n                        options.push({ name: 'Draw', odds: oddsData.draw });\n                    }\n                    if (oddsData.awayWin && oddsData.awayWin > 0) {\n                        options.push({ name: matchData.awayTeam, odds: oddsData.awayWin });\n                    }\n                    \n                    if (options.length > 0) {\n                        markets[marketKey] = {\n                            name: 'Match Winner',\n                            options: options\n                        };\n                        marketIndex++;\n                    }\n                }\n                \n                // Totals market (Over/Under)\n                if (oddsData.over || oddsData.under) {\n                    const marketKey = `market_${marketIndex}`;\n                    const options = [];\n                    \n                    if (oddsData.over && oddsData.over > 0) {\n                        const totalLine = oddsData.total || '2.5';\n                        options.push({ name: `Over (${totalLine})`, odds: oddsData.over });\n                    }\n                    if (oddsData.under && oddsData.under > 0) {\n                        const totalLine = oddsData.total || '2.5';\n                        options.push({ name: `Under (${totalLine})`, odds: oddsData.under });\n                    }\n                    \n                    if (options.length > 0) {\n                        markets[marketKey] = {\n                            name: 'Totals',\n                            options: options\n                        };\n                        marketIndex++;\n                    }\n                }\n                \n                // Handicap market\n                if (oddsData.homeHandicap || oddsData.awayHandicap) {\n                    const marketKey = `market_${marketIndex}`;\n                    const options = [];\n                    const handicapLine = oddsData.handicapLine || 0;\n                    \n                    if (oddsData.homeHandicap && oddsData.homeHandicap > 0) {\n                        options.push({ \n                            name: `${matchData.homeTeam} (${handicapLine >= 0 ? '+' : ''}${handicapLine})`, \n                            odds: oddsData.homeHandicap \n                        });\n                    }\n                    if (oddsData.awayHandicap && oddsData.awayHandicap > 0) {\n                        options.push({ \n                            name: `${matchData.awayTeam} (${-handicapLine >= 0 ? '+' : ''}${-handicapLine})`, \n                            odds: oddsData.awayHandicap \n                        });\n                    }\n                    \n                    if (options.length > 0) {\n                        markets[marketKey] = {\n                            name: 'Handicap',\n                            options: options\n                        };\n                        marketIndex++;\n                    }\n                }\n                \n                // Add any other odds fields as individual markets\n                Object.entries(oddsData).forEach(([key, value]) => {\n                    if (!['homeWin', 'awayWin', 'draw', 'over', 'under', 'total', 'homeHandicap', 'awayHandicap', 'handicapLine'].includes(key) && value && value > 0) {\n                        const marketKey = `market_${marketIndex}`;\n                        markets[marketKey] = {\n                            name: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'),\n                            options: [{ name: key, odds: value }]\n                        };\n                        marketIndex++;\n                    }\n                });\n            }\n            \n            console.log('Created markets from database format:', markets);\n            \n            return {\n                _id: matchData._id,\n                id: matchData._id,\n                homeTeam: matchData.homeTeam,\n                awayTeam: matchData.awayTeam,\n                homeTeamFlag: '🏳️',\n                awayTeamFlag: '🏳️',\n                competition: matchData.league || matchData.sport || 'Unknown League',\n                startTime: new Date(matchData.startTime),\n                sport: matchData.sport || 'Soccer',\n                markets: markets,\n                videoUrl: matchData.videoUrl || null,\n                videoPosterUrl: matchData.videoPosterUrl || null\n            };\n        }\n        \n        // Handle external API format (from odds API)\n        if (matchData.bookmakers && matchData.bookmakers.length > 0) {\n            // ... existing code ...\n            console.log('Processing odds API format with bookmakers');\n            console.log('Total bookmakers:', matchData.bookmakers.length);\n            \n            // Aggregate across bookmakers by normalized key to avoid duplicates\n            const aggregated = new Map(); // normKey -> { key: normKey, title, options }\n            matchData.bookmakers.forEach((bookmaker, bookmakerIndex) => {\n                console.log(`Processing bookmaker ${bookmakerIndex + 1}: ${bookmaker.title}`);\n                const titlePrefix = bookmakerIndex === 0 ? '' : `${bookmaker.title} - `;\n                if (bookmaker.markets) {\n                    console.log('Processing markets:', bookmaker.markets);\n                    bookmaker.markets.forEach((market) => {\n                        const normKey = normalizeMarketKey(market.key);\n                        const baseTitle = getMarketTitle(normKey);\n                        const title = `${titlePrefix}${baseTitle}`;\n                        const incoming = (market.outcomes || []).map(o => ({ name: o.name, odds: o.price, point: o.point ?? null }));\n                        const existing = aggregated.get(normKey);\n                        if (!existing) {\n                            aggregated.set(normKey, { key: normKey, title, options: incoming });\n                        } else {\n                            existing.options = [...existing.options, ...incoming];\n                        }\n                    });\n                }\n            });\n\n            // Normalize and dedupe options per market\n            const homeName = matchData.homeTeam || matchData.home_team || 'Home';\n            const awayName = matchData.awayTeam || matchData.away_team || 'Away';\n            const markets = {};\n            let marketIndex = 0;\n            Array.from(aggregated.values()).forEach(m => {\n                let options = m.options.filter(o => o.odds && o.odds > 0);\n                if (m.key === 'winner') {\n                    options = options.map(o => {\n                        const lower = (o.name || '').toLowerCase();\n                        if (['home','home win','homewin','1'].includes(lower)) return { ...o, name: homeName };\n                        if (['away','away win','awaywin','2'].includes(lower)) return { ...o, name: awayName };\n                        if (['draw','x','tie'].includes(lower)) return { ...o, name: 'Draw' };\n                        return o;\n                    });\n                } else if (m.key === 'totals') {\n                    options = options.map(o => {\n                        const lower = (o.name || '').toLowerCase();\n                        if (['over','ov','o'].includes(lower)) {\n                            const label = o.point != null ? `Over (${o.point})` : 'Over';\n                            return { ...o, name: label, point: null };\n                        }\n                        if (['under','un','u'].includes(lower)) {\n                            const label = o.point != null ? `Under (${o.point})` : 'Under';\n                            return { ...o, name: label, point: null };\n                        }\n                        return o;\n                    });\n                } else if (m.key === 'spreads') {\n                    options = options.map(o => {\n                        const raw = (o.name || '').toLowerCase();\n                        const isHome = raw.includes('home') || raw === homeName.toLowerCase();\n                        const isAway = raw.includes('away') || raw === awayName.toLowerCase();\n                        const signPoint = o.point != null ? (o.point >= 0 ? `+${o.point}` : `${o.point}`) : null;\n                        if (isHome) return { ...o, name: signPoint ? `${homeName} (${signPoint})` : homeName, point: null };\n                        if (isAway) return { ...o, name: signPoint ? `${awayName} (${signPoint})` : awayName, point: null };\n                        return { ...o, name: signPoint ? `${o.name} (${signPoint})` : (o.name || ''), point: null };\n                    });\n                }\n                // Dedupe by name; keep best priced\n                const byName = new Map();\n                options.forEach(o => {\n                    const k = (o.name || '').toLowerCase();\n                    if (!byName.has(k)) byName.set(k, o);\n                    else if ((!byName.get(k).odds || byName.get(k).odds <= 0) && o.odds && o.odds > 0) byName.set(k, o);\n                });\n                const finalOptions = Array.from(byName.values());\n                if (finalOptions.length > 0) {\n                    const marketKey = `market_${marketIndex}`;\n                    markets[marketKey] = { name: m.title, options: finalOptions };\n                    marketIndex++;\n                }\n            });\n            \n            console.log('Final markets object:', markets);\n            console.log('Total markets created:', Object.keys(markets).length);\n            \n\n            \n            const transformedMatch = {\n                _id: matchData.id,\n                id: matchData.id,\n                homeTeam: matchData.home_team,\n                awayTeam: matchData.away_team,\n                homeTeamFlag: '🏳️',\n                awayTeamFlag: '🏳️',\n                competition: matchData.sport_title || 'Unknown League',\n                startTime: new Date(matchData.commence_time),\n                sport: matchData.sport_key?.split('_')[0] || 'Soccer',\n                markets: markets,\n                videoUrl: matchData.videoUrl || null,\n                videoPosterUrl: matchData.videoPosterUrl || null\n            };\n            \n            console.log('Transformed match:', transformedMatch);\n            return transformedMatch;\n        }\n        \n        console.log('Using fallback format');\n        // Handle old format (fallback)\n        return matchData;\n    };\n\n    const addToBetslip = (marketName, optionName, odds) => {\n        const bet = {\n            matchId: match._id || match.id,\n            match: `${match.homeTeam} vs ${match.awayTeam}`,\n            market: marketName,\n            selection: optionName,\n            type: marketName,\n            odds: odds,\n            stake: 0,\n            sport: match.sport\n        };\n        dispatch({ type: 'activeBets/addBet', payload: bet });\n    };\n\n    const toggleMarket = (marketKey) => {\n        setExpandedMarkets(prev => ({\n            ...prev,\n            [marketKey]: !prev[marketKey]\n        }));\n    };\n\n    const expandAllMarkets = () => {\n        const availableMarketKeys = availableMarkets.map(market => market.key);\n        const expandedState = {};\n        availableMarketKeys.forEach(marketKey => {\n            expandedState[marketKey] = true;\n        });\n        // Also expand the additional markets section\n        if (hasAdditionalMarkets) {\n            expandedState['additional'] = true;\n        }\n        setExpandedMarkets(expandedState);\n        setAllMarketsExpanded(true);\n    };\n\n    const collapseAllMarkets = () => {\n        setExpandedMarkets({});\n        setAllMarketsExpanded(false);\n    };\n\n    // Filter markets to only show those with valid options\n    const getAvailableMarkets = () => {\n        if (!match?.markets) {\n            console.log('No match or markets found');\n            return [];\n        }\n        \n        console.log('Raw match markets:', match.markets);\n        console.log('Match object keys:', Object.keys(match));\n        \n        // Get all markets first and filter them properly\n        const allMarkets = Object.entries(match.markets)\n            .map(([marketKey, market]) => {\n                console.log(`Processing market ${marketKey}:`, market);\n                \n                // Filter options to only include those with valid odds\n                const validOptions = (market.options || []).filter(option => \n                    option.odds && option.odds > 0\n                );\n                \n                return {\n                    key: marketKey,\n                    ...market,\n                    options: validOptions\n                };\n            })\n            // Only include markets that have at least one valid option\n            .filter(market => market.options && market.options.length > 0);\n        \n        console.log('Filtered markets with valid options:', allMarkets);\n        \n        // Return only the first 6 markets for the main display\n        return allMarkets.slice(0, 6);\n    };\n\n    const availableMarkets = getAvailableMarkets();\n    \n    // For additional markets, get the rest beyond the first 6\n    const getAllMarkets = () => {\n        if (!match?.markets) return [];\n        \n        return Object.entries(match.markets)\n            .map(([marketKey, market]) => {\n                // Filter options to only include those with valid odds\n                const validOptions = (market.options || []).filter(option => \n                    option.odds && option.odds > 0\n                );\n                \n                return {\n                    key: marketKey,\n                    ...market,\n                    options: validOptions\n                };\n            })\n            // Only include markets that have at least one valid option\n            .filter(market => market.options && market.options.length > 0);\n    };\n\n    const allMarkets = getAllMarkets();\n    // Additional markets are those beyond the first 6, already filtered by getAllMarkets()\n    const additionalMarkets = allMarkets.slice(6);\n    \n    const hasAdditionalMarkets = additionalMarkets.length > 0;\n\n    // Debug logging for market count verification\n    useEffect(() => {\n        if (match) {\n            console.log(`MatchDetail: ${match.homeTeam} vs ${match.awayTeam}`);\n            console.log(`Total markets in match: ${Object.keys(match.markets || {}).length}`);\n            console.log(`Available markets (first 6 with valid odds): ${availableMarkets.length}`);\n            console.log(`Additional markets (beyond first 6): ${additionalMarkets.length}`);\n            \n            // Log all market keys\n            console.log('All market keys:', Object.keys(match.markets || {}));\n            \n            if (availableMarkets.length > 0) {\n            console.log('Available markets:', availableMarkets.map(market => ({\n                    key: market.key,\n                    name: market.name,\n                    optionsCount: market.options.length,\n                    options: market.options.map(opt => ({ name: opt.name, odds: opt.odds }))\n                })));\n            }\n            \n            if (additionalMarkets.length > 0) {\n                console.log('Additional markets:', additionalMarkets.map(market => ({\n                key: market.key,\n                name: market.name,\n                optionsCount: market.options.length\n            })));\n        }\n            \n            // Log all markets for debugging\n            console.log('All markets in match:', Object.keys(match.markets || {}));\n            console.log('Raw match markets object:', match.markets);\n        }\n    }, [match, availableMarkets, additionalMarkets]);\n\n    const formatTime = (date) => {\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    };\n\n    const formatDate = (date) => {\n        return date.toLocaleDateString([], { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n    };\n\n    if (!match) {\n        return (\n            <div className=\"loading\">\n                Loading match details...\n                <br />\n                <button \n                    onClick={() => {\n                        // Sample data loader disabled in production build\n                        // setMatch(someTransformedSampleMatch);\n                    }}\n                    style={{ marginTop: '20px', padding: '10px 20px', backgroundColor: '#4CAF50', color: 'white', border: 'none', borderRadius: '5px', cursor: 'pointer' }}\n                >\n                    Load Sample EPL Data (Test)\n                </button>\n            </div>\n        );\n    }\n\n    // Check if no markets are available\n    if (availableMarkets.length === 0) {\n        return (\n            <div className=\"match-detail-page\">\n                <div className=\"match-header\">\n                    <button className=\"back-btn\" onClick={() => navigate(-1)}>\n                        ← Back\n                    </button>\n                    <div className=\"match-info\">\n                        <div className=\"competition\">{match.competition}</div>\n                        <div className=\"teams\">\n                            <div className=\"team\">\n                                <span className=\"team-flag\">{match.homeTeamFlag}</span>\n                                <span className=\"team-name\">{match.homeTeam}</span>\n                            </div>\n                            <div className=\"vs\">vs</div>\n                            <div className=\"team\">\n                                <span className=\"team-name\">{match.awayTeam}</span>\n                                <span className=\"team-flag\">{match.awayTeamFlag}</span>\n                            </div>\n                        </div>\n                        <div className=\"match-time\">\n                            {formatTime(match.startTime)} • {formatDate(match.startTime)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"no-markets-message\">\n                    <p>No betting markets are currently available for this match.</p>\n                    <p>Please check back later for updated odds and markets.</p>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"match-detail-page\">\n            <div className=\"match-header\">\n                <button className=\"back-btn\" onClick={() => navigate(-1)}>\n                    ← Back\n                </button>\n                <div className=\"match-info\">\n                    <div className=\"competition\">{match.competition}</div>\n                    <div className=\"teams\">\n                        <div className=\"team\">\n                            <span className=\"team-flag\">{match.homeTeamFlag}</span>\n                            <span className=\"team-name\">{match.homeTeam}</span>\n                        </div>\n                        <div className=\"vs\">vs</div>\n                        <div className=\"team\">\n                            <span className=\"team-name\">{match.awayTeam}</span>\n                            <span className=\"team-flag\">{match.awayTeamFlag}</span>\n                        </div>\n                    </div>\n                    <div className=\"match-time\">\n                        {formatTime(match.startTime)} • {formatDate(match.startTime)}\n                    </div>\n                </div>\n            </div>\n\n            {/* Scheduled Video Player */}\n            {match.videoUrl && (\n              <div style={{ margin: '16px 0' }}>\n                <VideoPlayerScheduled\n                  src={match.videoUrl}\n                  poster={match.videoPosterUrl || undefined}\n                  startTime={match.startTime}\n                />\n              </div>\n            )}\n\n            <div className=\"betting-tabs\">\n                <button \n                    className={`tab-btn ${selectedTab === 'regular' ? 'active' : ''}`}\n                    onClick={() => setSelectedTab('regular')}\n                >\n                    Regular Time\n                </button>\n                <button \n                    className={`tab-btn ${selectedTab === 'totals' ? 'active' : ''}`}\n                    onClick={() => setSelectedTab('totals')}\n                >\n                    Totals\n                </button>\n                <button \n                    className={`tab-btn ${selectedTab === 'handicap' ? 'active' : ''}`}\n                    onClick={() => setSelectedTab('handicap')}\n                >\n                    Handicap\n                </button>\n                <button \n                    className={`tab-btn ${selectedTab === 'goals' ? 'active' : ''}`}\n                    onClick={() => setSelectedTab('goals')}\n                >\n                    Goals\n                </button>\n                <div className=\"markets-controls\">\n                    <button \n                        className={`tab-btn ${allMarketsExpanded ? 'active' : ''}`}\n                        onClick={allMarketsExpanded ? collapseAllMarkets : expandAllMarkets}\n                    >\n                        {allMarketsExpanded ? 'Collapse All' : 'Expand All'}\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"betting-markets two-column-markets\">\n                {(() => {\n                    console.log('RENDERING DEBUG: availableMarkets length:', availableMarkets.length);\n                    console.log('RENDERING DEBUG: availableMarkets:', availableMarkets);\n                    \n                    const half = Math.ceil(availableMarkets.length / 2);\n                    const leftMarkets = availableMarkets.slice(0, half);\n                    const rightMarkets = availableMarkets.slice(half);\n                    \n                    console.log('RENDERING DEBUG: leftMarkets:', leftMarkets);\n                    console.log('RENDERING DEBUG: rightMarkets:', rightMarkets);\n                    \n                    return (\n                        <div className=\"markets-grid-2col\">\n                            <div className=\"markets-col\">\n                                {leftMarkets.map((market) => {\n                                    console.log('RENDERING DEBUG: Rendering market:', market);\n                                    return (\n                                    <div key={market.key} className=\"market-section\">\n                                        <div \n                                            className=\"market-header\"\n                                            onClick={() => toggleMarket(market.key)}\n                                        >\n                                            <span className=\"market-name\">{market.name}</span>\n                                            <span className={`expand-arrow ${expandedMarkets[market.key] ? 'expanded' : ''}`}>\n                                                ▼\n                                            </span>\n                                        </div>\n                                        {(expandedMarkets[market.key] || allMarketsExpanded) && (\n                                            <div className=\"market-options\">\n                                                {market.options.map((option, index) => {\n                                                    const riskAssessment = assessOddsRisk(match, option.odds, option.name);\n                                                    \n                                                    // If odds should be disabled, show locked odds component\n                                                    if (riskAssessment.shouldDisable) {\n                                                        return (\n                                                            <div key={index} className=\"market-option-btn locked\">\n                                                                <span className=\"option-name\">{option.name}</span>\n                                                                <LockedOdds\n                                                                    riskAssessment={riskAssessment}\n                                                                    className=\"option-odds-locked\"\n                                                                />\n                                                            </div>\n                                                        );\n                                                    }\n                                                    \n                                                    return (\n                                                        <button\n                                                            key={index}\n                                                            className=\"market-option-btn\"\n                                                            onClick={() => addToBetslip(market.name, option.name, option.odds)}\n                                                        >\n                                                            <span className=\"option-name\">{option.name}</span>\n                                                            <span className=\"option-odds\">{option.odds.toFixed(2)}</span>\n                                                        </button>\n                                                    );\n                                                })}\n                                            </div>\n                                        )}\n                                    </div>\n                                    );\n                                })}\n                            </div>\n                            <div className=\"markets-col\">\n                                {rightMarkets.map((market) => {\n                                    console.log('RENDERING DEBUG: Rendering market:', market);\n                                    return (\n                        <div key={market.key} className=\"market-section\">\n                            <div \n                                className=\"market-header\"\n                                onClick={() => toggleMarket(market.key)}\n                            >\n                                <span className=\"market-name\">{market.name}</span>\n                                <span className={`expand-arrow ${expandedMarkets[market.key] ? 'expanded' : ''}`}>\n                                    ▼\n                                </span>\n                            </div>\n                            {(expandedMarkets[market.key] || allMarketsExpanded) && (\n                                <div className=\"market-options\">\n                                                {market.options.map((option, index) => {\n                                                    const riskAssessment = assessOddsRisk(match, option.odds, option.name);\n                                                    \n                                                    // If odds should be disabled, show locked odds component\n                                                    if (riskAssessment.shouldDisable) {\n                                                        return (\n                                                            <div key={index} className=\"market-option-btn locked\">\n                                                                <span className=\"option-name\">{option.name}</span>\n                                                                <LockedOdds\n                                                                    riskAssessment={riskAssessment}\n                                                                    className=\"option-odds-locked\"\n                                                                />\n                                                            </div>\n                                                        );\n                                                    }\n                                                    \n                                                    return (\n                                                        <button\n                                                            key={index}\n                                                            className=\"market-option-btn\"\n                                                            onClick={() => addToBetslip(market.name, option.name, option.odds)}\n                                                        >\n                                                            <span className=\"option-name\">{option.name}</span>\n                                                            <span className=\"option-odds\">{option.odds.toFixed(2)}</span>\n                                                        </button>\n                                                    );\n                                                })}\n                                </div>\n                            )}\n                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    );\n                })()}\n                \n                {/* Additional Markets Section */}\n                {hasAdditionalMarkets && (\n                    <div className=\"additional-markets-section\">\n                        <div \n                            className=\"additional-markets-header\"\n                            onClick={() => toggleMarket('additional')}\n                        >\n                            <span className=\"additional-markets-title\">\n                                Additional Markets ({additionalMarkets.length})\n                            </span>\n                            <span className={`expand-arrow ${expandedMarkets['additional'] ? 'expanded' : ''}`}>\n                                ▼\n                            </span>\n                        </div>\n                        {expandedMarkets['additional'] && (\n                            <div className=\"additional-markets-content\">\n                                <div className=\"markets-grid-2col\">\n                                    <div className=\"markets-col\">\n                                        {additionalMarkets.slice(0, Math.ceil(additionalMarkets.length / 2)).map((market) => (\n                                            <div key={market.key} className=\"market-section\">\n                                                <div \n                                                    className=\"market-header\"\n                                                    onClick={() => toggleMarket(market.key)}\n                                                >\n                                                    <span className=\"market-name\">{market.name}</span>\n                                                    <span className={`expand-arrow ${expandedMarkets[market.key] ? 'expanded' : ''}`}>\n                                                        ▼\n                                                    </span>\n                                                </div>\n                                                {expandedMarkets[market.key] && (\n                                                    <div className=\"market-options\">\n                                                        {market.options.map((option, index) => {\n                                                            const riskAssessment = assessOddsRisk(match, option.odds, option.name);\n                                                            \n                                                            // If odds should be disabled, show locked odds component\n                                                            if (riskAssessment.shouldDisable) {\n                                                                return (\n                                                                    <div key={index} className=\"market-option-btn locked\">\n                                                                        <span className=\"option-name\">{option.name}</span>\n                                                                        <LockedOdds\n                                                                            riskAssessment={riskAssessment}\n                                                                            className=\"option-odds-locked\"\n                                                                        />\n                                                                    </div>\n                                                                );\n                                                            }\n                                                            \n                                                            return (\n                                                                <button\n                                                                    key={index}\n                                                                    className=\"market-option-btn\"\n                                                                    onClick={() => addToBetslip(market.name, option.name, option.odds)}\n                                                                >\n                                                                    <span className=\"option-name\">{option.name}</span>\n                                                                    <span className=\"option-odds\">{option.odds.toFixed(2)}</span>\n                                                                </button>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className=\"markets-col\">\n                                        {additionalMarkets.slice(Math.ceil(additionalMarkets.length / 2)).map((market) => (\n                                            <div key={market.key} className=\"market-section\">\n                                                <div \n                                                    className=\"market-header\"\n                                                    onClick={() => toggleMarket(market.key)}\n                                                >\n                                                    <span className=\"market-name\">{market.name}</span>\n                                                    <span className={`expand-arrow ${expandedMarkets[market.key] ? 'expanded' : ''}`}>\n                                                        ▼\n                                                    </span>\n                                                </div>\n                                                {expandedMarkets[market.key] && (\n                                                    <div className=\"market-options\">\n                                                        {market.options.map((option, index) => {\n                                                            const riskAssessment = assessOddsRisk(match, option.odds, option.name);\n                                                            \n                                                            // If odds should be disabled, show locked odds component\n                                                            if (riskAssessment.shouldDisable) {\n                                                                return (\n                                                                    <div key={index} className=\"market-option-btn locked\">\n                                                                        <span className=\"option-name\">{option.name}</span>\n                                                                        <LockedOdds\n                                                                            riskAssessment={riskAssessment}\n                                                                            className=\"option-odds-locked\"\n                                                                        />\n                                                                    </div>\n                                                                );\n                                                            }\n                                                            \n                                                            return (\n                                                                <button\n                                                                    key={index}\n                                                                    className=\"market-option-btn\"\n                                                                    onClick={() => addToBetslip(market.name, option.name, option.odds)}\n                                                                >\n                                                                    <span className=\"option-name\">{option.name}</span>\n                                                                    <span className=\"option-odds\">{option.odds.toFixed(2)}</span>\n                                                                </button>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MatchDetail;","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\n\r\n// Props:\r\n// - src: string (required)\r\n// - poster: string (optional)\r\n// - startTime: Date|string (ISO) (required)\r\n// - controls: boolean (default true)\r\n// - className: string\r\n// - videoDisplayControl: string (optional) - 'scheduled', 'manual', 'live_only'\r\n// Behavior: show countdown if now < startTime; auto-play when now >= startTime\r\nconst VideoPlayerScheduled = ({ src, poster, startTime, controls = true, className = '', videoDisplayControl = 'scheduled' }) => {\r\n  const videoRef = useRef(null);\r\n  const [now, setNow] = useState(Date.now());\r\n  const startTs = useMemo(() => {\r\n    if (!startTime) return null;\r\n    const t = typeof startTime === 'string' ? Date.parse(startTime) : +startTime;\r\n    return Number.isFinite(t) ? t : null;\r\n  }, [startTime]);\r\n\r\n  // Determine if video should be displayed based on videoDisplayControl\r\n  const shouldDisplayVideo = useMemo(() => {\r\n    if (!startTs) return false;\r\n    \r\n    switch (videoDisplayControl) {\r\n      case 'scheduled':\r\n        return now >= startTs;\r\n      case 'manual':\r\n        return true; // Admin controls this\r\n      case 'live_only':\r\n        // For live_only, we need to check if the match is actually live\r\n        // This would typically come from the parent component\r\n        return now >= startTs;\r\n      default:\r\n        return now >= startTs;\r\n    }\r\n  }, [startTs, now, videoDisplayControl]);\r\n\r\n  const isReadyToPlay = shouldDisplayVideo && startTs !== null && now >= startTs;\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(() => setNow(Date.now()), 1000);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isReadyToPlay && videoRef.current) {\r\n      const tryPlay = async () => {\r\n        try {\r\n          await videoRef.current.play();\r\n        } catch (e) {\r\n          // Autoplay may be blocked; show controls for manual start\r\n          // No-op: the user can press play\r\n        }\r\n      };\r\n      tryPlay();\r\n    }\r\n  }, [isReadyToPlay]);\r\n\r\n  const remainingMs = startTs ? Math.max(0, startTs - now) : 0;\r\n  const remainingSec = Math.floor(remainingMs / 1000);\r\n  const hh = String(Math.floor(remainingSec / 3600)).padStart(2, '0');\r\n  const mm = String(Math.floor((remainingSec % 3600) / 60)).padStart(2, '0');\r\n  const ss = String(remainingSec % 60).padStart(2, '0');\r\n\r\n  if (!src || !startTs) {\r\n    return null;\r\n  }\r\n\r\n  // Don't show anything if video shouldn't be displayed\r\n  if (!shouldDisplayVideo) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={`scheduled-video-container ${className}`} style={{ width: '100%', maxWidth: 960, margin: '0 auto' }}>\r\n      {!isReadyToPlay ? (\r\n        <div className=\"scheduled-video-countdown\" style={{\r\n          display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center',\r\n          aspectRatio: '16 / 9', backgroundColor: '#111', color: '#fff', borderRadius: 8, position: 'relative'\r\n        }}>\r\n          {poster && (\r\n            <img src={poster} alt=\"Poster\" style={{ position: 'absolute', inset: 0, width: '100%', height: '100%', objectFit: 'cover', opacity: 0.35, borderRadius: 8 }} />\r\n          )}\r\n          <div style={{ position: 'relative', zIndex: 1, textAlign: 'center', padding: 16 }}>\r\n            <div style={{ fontSize: 18, marginBottom: 8 }}>Broadcast starts in</div>\r\n            <div style={{ fontSize: 36, fontWeight: 700, letterSpacing: 1 }}>{hh}:{mm}:{ss}</div>\r\n            <div style={{ marginTop: 8, fontSize: 14, opacity: 0.85 }}>\r\n              {videoDisplayControl === 'manual' \r\n                ? 'Video is ready to play. Click play to start.' \r\n                : 'The video will start automatically at the scheduled time.'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <video\r\n          ref={videoRef}\r\n          src={src}\r\n          poster={poster || undefined}\r\n          controls={controls}\r\n          playsInline\r\n          style={{ width: '100%', height: 'auto', borderRadius: 8, background: '#000' }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayerScheduled;\r\n\r\n\r\n","import React from 'react';\n\nconst LockedOdds = ({ \n  riskAssessment, \n  className = '' \n}) => {\n  const { shouldDisable } = riskAssessment;\n  \n  if (!shouldDisable) {\n    return null;\n  }\n  \n  return (\n    <div \n      className={`locked-odds ${className}`}\n      title=\"Odds Unavailable\"\n    >\n      {/* Lock Icon Only - Perfectly Centered */}\n      <div className=\"lock-icon\">\n        🔒\n      </div>\n    </div>\n  );\n};\n\nexport default LockedOdds;\n","// Shared mapping for market keys to user-friendly titles\n// Covers common markets and period/half variants, including alternates\n\n// Normalize raw keys to canonical forms for lookup and dedupe\nexport const normalizeMarketKey = (keyRaw) => {\n  const key = (keyRaw || '').toLowerCase().trim();\n  if (!key) return '';\n  // Remove trailing exchange/lay suffixes\n  const base = key.replace(/_(lay|exchange)$/i, '');\n  // Map direct aliases to core keys\n  if (['h2h','moneyline','ml','h2h_lay','winner','match_winner','1x2'].includes(base)) return 'winner';\n  // Collapse single-side 1x2 variants into one Winner market\n  if (['home_win','away_win','draw','draw_result','homewin','awaywin'].includes(base)) return 'winner';\n  // Map basic totals aliases to unified totals\n  if (['total','total_goals','total_points','over','under'].includes(base)) return 'totals';\n  // Map handicap/spread aliases to unified spreads\n  if (['handicap','asian_handicap','point_spread','spread','line_spread','homehandicap','awayhandicap','handicapline','handicap_line'].includes(base)) return 'spreads';\n  if (base === 'outrights_lay') return 'outrights';\n  // Synonyms for goal/try scorer keys\n  if (base === 'player_first_goal_scorer') return 'player_goal_scorer_first';\n  if (base === 'player_last_goal_scorer') return 'player_goal_scorer_last';\n  return base;\n};\n\n// Primary titles mapping from provided specification\nconst MARKET_TITLE_MAP = {\n  // Core\n  winner: 'Winner',\n  spreads: 'Handicap',\n  totals: 'Totals',\n  outrights: 'Outrights',\n  outrights_lay: 'Outrights',\n\n  // Halves/Periods/Quarters (Moneyline)\n  h2h_h1: 'Moneyline 1st Half',\n  h2h_h2: 'Moneyline 2nd Half',\n  h2h_p1: 'Moneyline 1st Period',\n  h2h_p2: 'Moneyline 2nd Period',\n  h2h_p3: 'Moneyline 3rd Period',\n  h2h_3_way_q1: '1st Quarter 3 Way Result',\n  h2h_3_way_q2: '2nd Quarter 3 Way Result',\n  h2h_3_way_q3: '3rd Quarter 3 Way Result',\n  h2h_3_way_q4: '4th Quarter 3 Way Result',\n  h2h_3_way_h1: '1st Half 3 Way Result',\n  h2h_3_way_h2: '2nd Half 3 Way Result',\n  h2h_3_way_p1: '1st Period 3 Way Result',\n  h2h_3_way_p2: '2nd Period 3 Way Result',\n  h2h_3_way_p3: '3rd Period 3 Way Result',\n\n  // Baseball innings - Moneyline\n  h2h_1st_1_innings: 'Moneyline 1st Inning',\n  h2h_1st_3_innings: 'Moneyline 1st 3 Innings',\n  h2h_1st_5_innings: 'Moneyline 1st 5 Innings',\n  h2h_1st_7_innings: 'Moneyline 1st 7 Innings',\n  h2h_3_way_1st_1_innings: '3-way Moneyline 1st Inning',\n  h2h_3_way_1st_3_innings: '3-way Moneyline 1st 3 Innings',\n  h2h_3_way_1st_5_innings: '3-way Moneyline 1st 5 Innings',\n  h2h_3_way_1st_7_innings: '3-way Moneyline 1st 7 Innings',\n\n  // Spreads variants\n  spreads_q1: 'Spreads 1st Quarter',\n  spreads_q2: 'Spreads 2nd Quarter',\n  spreads_q3: 'Spreads 3rd Quarter',\n  spreads_q4: 'Spreads 4th Quarter',\n  spreads_h1: 'Spreads 1st Half',\n  spreads_h2: 'Spreads 2nd Half',\n  spreads_p1: 'Spreads 1st Period',\n  spreads_p2: 'Spreads 2nd Period',\n  spreads_p3: 'Spreads 3rd Period',\n  spreads_1st_1_innings: 'Spreads 1st Inning',\n  spreads_1st_3_innings: 'Spreads 1st 3 Innings',\n  spreads_1st_5_innings: 'Spreads 1st 5 Innings',\n  spreads_1st_7_innings: 'Spreads 1st 7 Innings',\n\n  alternate_spreads_1st_1_innings: 'Alternate Spreads 1st Inning',\n  alternate_spreads_1st_3_innings: 'Alternate Spreads 1st 3 Innings',\n  alternate_spreads_1st_5_innings: 'Alternate Spreads 1st 5 Innings',\n  alternate_spreads_1st_7_innings: 'Alternate Spreads 1st 7 Innings',\n  alternate_spreads_q1: 'Alternate Spreads 1st Quarter',\n  alternate_spreads_q2: 'Alternate Spreads 2nd Quarter',\n  alternate_spreads_q3: 'Alternate Spreads 3rd Quarter',\n  alternate_spreads_q4: 'Alternate Spreads 4th Quarter',\n  alternate_spreads_h1: 'Alternate Spreads 1st Half',\n  alternate_spreads_h2: 'Alternate Spreads 2nd Half',\n  alternate_spreads_p1: 'Alternate Spreads 1st Period',\n  alternate_spreads_p2: 'Alternate Spreads 2nd Period',\n  alternate_spreads_p3: 'Alternate Spreads 3rd Period',\n\n  // Totals variants\n  totals_q1: 'Over/Under 1st Quarter',\n  totals_q2: 'Over/Under 2nd Quarter',\n  totals_q3: 'Over/Under 3rd Quarter',\n  totals_q4: 'Over/Under 4th Quarter',\n  totals_h1: 'Over/Under 1st Half',\n  totals_h2: 'Over/Under 2nd Half',\n  totals_p1: 'Over/Under 1st Period',\n  totals_p2: 'Over/Under 2nd Period',\n  totals_p3: 'Over/Under 3rd Period',\n  totals_1st_1_innings: 'Over/Under 1st Inning',\n  totals_1st_3_innings: 'Over/Under 1st 3 Innings',\n  totals_1st_5_innings: 'Over/Under 1st 5 Innings',\n  totals_1st_7_innings: 'Over/Under 1st 7 Innings',\n\n  alternate_totals_1st_1_innings: 'Alternate Over/Under 1st Inning',\n  alternate_totals_1st_3_innings: 'Alternate Over/Under 1st 3 Innings',\n  alternate_totals_1st_5_innings: 'Alternate Over/Under 1st 5 Innings',\n  alternate_totals_1st_7_innings: 'Alternate Over/Under 1st 7 Innings',\n  alternate_totals_q1: 'Alternate Totals 1st Quarter',\n  alternate_totals_q2: 'Alternate Totals 2nd Quarter',\n  alternate_totals_q3: 'Alternate Totals 3rd Quarter',\n  alternate_totals_q4: 'Alternate Totals 4th Quarter',\n  alternate_totals_h1: 'Alternate Totals 1st Half',\n  alternate_totals_h2: 'Alternate Totals 2nd Half',\n  alternate_totals_p1: 'Alternate Totals 1st Period',\n  alternate_totals_p2: 'Alternate Totals 2nd Period',\n  alternate_totals_p3: 'Alternate Totals 3rd Period',\n\n  // Team totals\n  team_totals_h1: 'Team Totals 1st Half',\n  team_totals_h2: 'Team Totals 2nd Half',\n  team_totals_q1: 'Team Totals 1st Quarter',\n  team_totals_q2: 'Team Totals 2nd Quarter',\n  team_totals_q3: 'Team Totals 3rd Quarter',\n  team_totals_q4: 'Team Totals 4th Quarter',\n  team_totals_p1: 'Team Totals 1st Period',\n  team_totals_p2: 'Team Totals 2nd Period',\n  team_totals_p3: 'Team Totals 3rd Period',\n\n  alternate_team_totals_h1: 'Alternate Team Totals 1st Half',\n  alternate_team_totals_h2: 'Alternate Team Totals 2nd Half',\n  alternate_team_totals_q1: 'Alternate Team Totals 1st Quarter',\n  alternate_team_totals_q2: 'Alternate Team Totals 2nd Quarter',\n  alternate_team_totals_q3: 'Alternate Team Totals 3rd Quarter',\n  alternate_team_totals_q4: 'Alternate Team Totals 4th Quarter',\n  alternate_team_totals_p1: 'Alternate Team Totals 1st Period',\n  alternate_team_totals_p2: 'Alternate Team Totals 2nd Period',\n  alternate_team_totals_p3: 'Alternate Team Totals 3rd Period',\n\n  // Player props (NFL style and general)\n  player_assists: 'Player Assists (Over/Under)',\n  player_defensive_interceptions: 'Defensive Interceptions (Over/Under)',\n  player_field_goals: 'Field Goals (Over/Under)',\n  player_kicking_points: 'Kicking Points (Over/Under)',\n  player_pass_attempts: 'Pass Attempts (Over/Under)',\n  player_pass_completions: 'Pass Completions (Over/Under)',\n  player_pass_interceptions: 'Pass Intercepts (Over/Under)',\n  player_pass_longest_completion: 'Longest Pass Completion (Over/Under)',\n  player_pass_rush_yds: 'Pass + Rush Yards (Over/Under)',\n  player_pass_rush_reception_tds: 'Pass + Rush + Reception Touchdowns (Over/Under)',\n  player_pass_rush_reception_yds: 'Pass + Rush + Reception Yards (Over/Under)',\n  player_pass_tds: 'Pass Touchdowns (Over/Under)',\n  player_pass_yds: 'Pass Yards (Over/Under)',\n  player_pass_yds_q1: '1st Quarter Pass Yards (Over/Under)',\n  player_pats: 'Points After Touchdown (Over/Under)',\n  player_receptions: 'Receptions (Over/Under)',\n  player_reception_longest: 'Longest Reception (Over/Under)',\n  player_reception_tds: 'Reception Touchdowns (Over/Under)',\n  player_reception_yds: 'Reception Yards (Over/Under)',\n  player_rush_attempts: 'Rush Attempts (Over/Under)',\n  player_rush_longest: 'Longest Rush (Over/Under)',\n  player_rush_reception_tds: 'Rush + Reception Touchdowns (Over/Under)',\n  player_rush_reception_yds: 'Rush + Reception Yards (Over/Under)',\n  player_rush_tds: 'Rush Touchdowns (Over/Under)',\n  player_rush_yds: 'Rush Yards (Over/Under)',\n  player_sacks: 'Sacks (Over/Under)',\n  player_solo_tackles: 'Solo Tackles (Over/Under)',\n  player_tackles_assists: 'Tackles + Assists (Over/Under)',\n  player_tds_over: 'Touchdowns (Over only)',\n  player_1st_td: '1st Touchdown Scorer (Yes/No)',\n  player_anytime_td: 'Anytime Touchdown Scorer (Yes/No)',\n  player_last_td: 'Last Touchdown Scorer (Yes/No)',\n};\n\n// Additional alternates and extended props per request\nObject.assign(MARKET_TITLE_MAP, {\n  // NFL alternates\n  player_field_goals_alternate: 'Alternate Field Goals (Over/Under)',\n  player_kicking_points_alternate: 'Alternate Kicking Points (Over/Under)',\n  player_pass_attempts_alternate: 'Alternate Pass Attempts (Over/Under)',\n  player_pass_completions_alternate: 'Alternate Pass Completions (Over/Under)',\n  player_pass_interceptions_alternate: 'Alternate Pass Interceptions (Over/Under)',\n  player_pass_longest_completion_alternate: 'Alternate Longest Pass Completion (Over/Under)',\n  player_pass_rush_yds_alternate: 'Alternate Pass + Rush Yards (Over/Under)',\n  player_pass_rush_reception_tds_alternate: 'Alternate Pass + Rush + Reception Touchdowns (Over/Under)',\n  player_pass_rush_reception_yds_alternate: 'Alternate Pass + Rush + Reception Yards (Over/Under)',\n  player_pass_tds_alternate: 'Alternate Pass Touchdowns (Over/Under)',\n  player_pass_yds_alternate: 'Alternate Pass Yards (Over/Under)',\n  player_pats_alternate: 'Alternate Points After Touchdown (Over/Under)',\n  player_receptions_alternate: 'Alternate Receptions (Over/Under)',\n  player_reception_longest_alternate: 'Alternate Longest Reception (Over/Under)',\n  player_reception_tds_alternate: 'Alternate Reception Touchdowns (Over/Under)',\n  player_reception_yds_alternate: 'Alternate Reception Yards (Over/Under)',\n  player_rush_attempts_alternate: 'Alternate Rush Attempts (Over/Under)',\n  player_rush_longest_alternate: 'Alternate Longest Rush (Over/Under)',\n  player_rush_reception_tds_alternate: 'Alternate Rush + Reception Touchdowns (Over/Under)',\n  player_rush_reception_yds_alternate: 'Alternate Rush + Reception Yards (Over/Under)',\n  player_rush_tds_alternate: 'Alternate Rush Touchdowns (Over/Under)',\n  player_rush_yds_alternate: 'Alternate Rush Yards (Over/Under)',\n  player_sacks_alternate: 'Alternate Sacks (Over/Under)',\n  player_solo_tackles_alternate: 'Alternate Solo Tackles (Over/Under)',\n  player_tackles_assists_alternate: 'Alternate Tackles + Assists (Over/Under)',\n\n  // Basketball core\n  player_points: 'Points (Over/Under)',\n  player_points_q1: '1st Quarter Points (Over/Under)',\n  player_rebounds: 'Rebounds (Over/Under)',\n  player_rebounds_q1: '1st Quarter Rebounds (Over/Under)',\n  player_assists_q1: '1st Quarter Assists (Over/Under)',\n  player_threes: 'Threes (Over/Under)',\n  player_blocks: 'Blocks (Over/Under)',\n  player_steals: 'Steals (Over/Under)',\n  player_blocks_steals: 'Blocks + Steals (Over/Under)',\n  player_turnovers: 'Turnovers (Over/Under)',\n  player_points_rebounds_assists: 'Points + Rebounds + Assists (Over/Under)',\n  player_points_rebounds: 'Points + Rebounds (Over/Under)',\n  player_points_assists: 'Points + Assists (Over/Under)',\n  player_rebounds_assists: 'Rebounds + Assists (Over/Under)',\n  player_field_goals: 'Field Goals (Over/Under)',\n  player_frees_made: 'Frees made (Over/Under)',\n  player_frees_attempts: 'Frees attempted (Over/Under)',\n  player_first_basket: 'First Basket Scorer (Yes/No)',\n  player_first_team_basket: 'First Basket Scorer on Team (Yes/No)',\n  player_double_double: 'Double Double (Yes/No)',\n  player_triple_double: 'Triple Double (Yes/No)',\n  player_method_of_first_basket: 'Method of First Basket (Various)',\n  // Basketball alternates\n  player_points_alternate: 'Alternate Points (Over/Under)',\n  player_rebounds_alternate: 'Alternate Rebounds (Over/Under)',\n  player_assists_alternate: 'Alternate Assists (Over/Under)',\n  player_blocks_alternate: 'Alternate Blocks (Over/Under)',\n  player_steals_alternate: 'Alternate Steals (Over/Under)',\n  player_turnovers_alternate: 'Alternate Turnovers (Over/Under)',\n  player_threes_alternate: 'Alternate Threes (Over/Under)',\n  player_points_assists_alternate: 'Alternate Points + Assists (Over/Under)',\n  player_points_rebounds_alternate: 'Alternate Points + Rebounds (Over/Under)',\n  player_rebounds_assists_alternate: 'Alternate Rebounds + Assists (Over/Under)',\n  player_points_rebounds_assists_alternate: 'Alternate Points + Rebounds + Assists (Over/Under)',\n\n  // Baseball batter props\n  batter_home_runs: 'Batter home runs (Over/Under)',\n  batter_first_home_run: 'Batter first home run (Yes/No)',\n  batter_hits: 'Batter hits (Over/Under)',\n  batter_total_bases: 'Batter total bases (Over/Under)',\n  batter_rbis: 'Batter RBIs (Over/Under)',\n  batter_runs_scored: 'Batter runs scored (Over/Under)',\n  batter_hits_runs_rbis: 'Batter hits + runs + RBIs (Over/Under)',\n  batter_singles: 'Batter singles (Over/Under)',\n  batter_doubles: 'Batter doubles (Over/Under)',\n  batter_triples: 'Batter triples (Over/Under)',\n  batter_walks: 'Batter walks (Over/Under)',\n  batter_strikeouts: 'Batter strikeouts (Over/Under)',\n  batter_stolen_bases: 'Batter stolen bases (Over/Under)',\n  // Baseball pitcher props\n  pitcher_strikeouts: 'Pitcher strikeouts (Over/Under)',\n  pitcher_record_a_win: 'Pitcher to record a win (Yes/No)',\n  pitcher_hits_allowed: 'Pitcher hits allowed (Over/Under)',\n  pitcher_walks: 'Pitcher walks (Over/Under)',\n  pitcher_earned_runs: 'Pitcher earned runs (Over/Under)',\n  pitcher_outs: 'Pitcher outs (Over/Under)',\n  // Baseball alternates\n  batter_total_bases_alternate: 'Alternate batter total bases (Over/Under)',\n  batter_home_runs_alternate: 'Alternate batter home runs (Over/Under)',\n  batter_hits_alternate: 'Alternate batter hits (Over/Under)',\n  batter_rbis_alternate: 'Alternate batter RBIs (Over/Under)',\n  batter_walks_alternate: 'Alternate batter walks (Over/Under)',\n  batter_strikeouts_alternate: 'Alternate batter strikeouts (Over/Under)',\n  batter_runs_scored_alternate: 'Alternate batter runs scored (Over/Under)',\n  batter_singles_alternate: 'Alternate batter singles (Over/Under)',\n  batter_doubles_alternate: 'Alternate batter doubles (Over/Under)',\n  batter_triples_alternate: 'Alternate batter triples (Over/Under)',\n  pitcher_hits_allowed_alternate: 'Alternate pitcher hits allowed (Over/Under)',\n  pitcher_walks_alternate: 'Alternate pitcher walks allowed (Over/Under)',\n  pitcher_strikeouts_alternate: 'Alternate pitcher strikeouts (Over/Under)',\n\n  // Hockey props\n  player_power_play_points: 'Power play points (Over/Under)',\n  player_blocked_shots: 'Blocked shots (Over/Under)',\n  player_shots_on_goal: 'Shots on goal (Over/Under)',\n  player_goals: 'Goals (Over/Under)',\n  player_total_saves: 'Total saves (Over/Under)',\n\n  // Hockey goal scorers\n  player_goal_scorer_first: 'First Goal Scorer (Yes/No)',\n  player_goal_scorer_last: 'Last Goal Scorer (Yes/No)',\n  player_goal_scorer_anytime: 'Anytime Goal Scorer (Yes/No)',\n\n  // Hockey alternates\n  player_power_play_points_alternate: 'Alternate Power Play Points (Over/Under)',\n  player_goals_alternate: 'Alternate Goals (Over/Under)',\n  player_shots_on_goal_alternate: 'Alternate Shots on Goal (Over/Under)',\n  player_blocked_shots_alternate: 'Alternate Blocked Shots (Over/Under)',\n  player_total_saves_alternate: 'Alternate Total Saves (Over/Under)',\n\n  // AFL props\n  player_disposals: 'Disposals (Over/Under)',\n  player_disposals_over: 'Disposals (Over only)',\n  player_goals_scored_over: 'Goals scored (Over only)',\n  player_marks_over: 'Marks (Over only)',\n  player_marks_most: 'Most Marks (Yes/No)',\n  player_tackles_over: 'Tackles (Over only)',\n  player_tackles_most: 'Tackles (Yes/No)',\n  player_afl_fantasy_points: 'AFL Fantasy Points (Over/Under)',\n  player_afl_fantasy_points_over: 'AFL Fantasy Points (Over only)',\n  player_afl_fantasy_points_most: 'Most AFL Fantasy Points (Yes/No)',\n\n  // Rugby league/union try scorers\n  player_try_scorer_first: 'First Try Scorer (Yes/No)',\n  player_try_scorer_last: 'Last Try Scorer (Yes/No)',\n  player_try_scorer_anytime: 'Anytime Try Scorer (Yes/No)',\n  player_try_scorer_over: 'Tries Scored (Over only)',\n\n  // Soccer player events\n  player_to_receive_card: 'Player to receive a card (Yes/No)',\n  player_to_receive_red_card: 'Player to receive a red card (Yes/No)',\n  player_shots_on_target: 'Player Shots on Target (Over/Under)',\n  player_shots: 'Player Shots (Over/Under)',\n\n  // Team corners/cards markets\n  alternate_spreads_corners: 'Handicap Corners',\n  alternate_totals_corners: 'Total Corners (Over/Under)',\n  alternate_spreads_cards: 'Handicap Cards / Bookings',\n  alternate_totals_cards: 'Total Cards / Bookings (Over/Under)',\n\n  // Soccer match market\n  double_chance: 'Double Chance'\n});\n\nconst humanize = (key) => (key || '').replace(/_/g, ' ').replace(/\\b\\w/g, (l) => l.toUpperCase());\n\nexport const getMarketTitle = (keyRaw) => {\n  const norm = normalizeMarketKey(keyRaw);\n  if (!norm) return '';\n  return MARKET_TITLE_MAP[norm] || humanize(norm);\n};\n\nexport default getMarketTitle;"],"names":["DISABLE_ODDS_LOCK","process","REACT_APP_DISABLE_ODDS_LOCK","RISK_THRESHOLDS","assessOddsRisk","match","odds","oddsType","shouldDisable","reason","riskLevel","riskFactors","isOddsTooLow","push","isObviousOutcome","isLive","status","undefined","homeScore","awayScore","Math","abs","startTime","Date","isLiveMatchObvious","includes","length","join","MatchDetail","matchId","useParams","navigate","useNavigate","dispatch","useDispatch","setMatch","useState","expandedMarkets","setExpandedMarkets","selectedTab","setSelectedTab","allMarketsExpanded","setAllMarketsExpanded","useEffect","URLSearchParams","window","location","search","get","async","console","log","response","apiService","getMatchById","matchData","data","transformedMatch","transformOddsToMatchDetail","err","_err$response","_err$response2","_err$response3","error","statusText","fetchMatch","_id","bookmakers","markets","marketIndex","oddsData","homeWin","awayWin","draw","marketKey","concat","options","name","homeTeam","awayTeam","over","under","totalLine","total","homeHandicap","awayHandicap","handicapLine","Object","entries","forEach","_ref","key","value","charAt","toUpperCase","slice","replace","id","homeTeamFlag","awayTeamFlag","competition","league","sport","videoUrl","videoPosterUrl","_matchData$sport_key","aggregated","Map","bookmaker","bookmakerIndex","title","titlePrefix","market","normKey","normalizeMarketKey","baseTitle","getMarketTitle","incoming","outcomes","map","o","_o$point","price","point","existing","set","homeName","home_team","awayName","away_team","Array","from","values","m","filter","lower","toLowerCase","_objectSpread","label","raw","isHome","isAway","signPoint","byName","k","has","finalOptions","keys","sport_title","commence_time","sport_key","split","addToBetslip","marketName","optionName","bet","selection","type","stake","payload","toggleMarket","prev","availableMarkets","getAvailableMarkets","allMarkets","_ref2","validOptions","option","additionalMarkets","_ref3","hasAdditionalMarkets","optionsCount","opt","formatTime","date","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","weekday","year","month","day","_jsxs","className","children","_jsx","onClick","style","margin","VideoPlayerScheduled","src","poster","collapseAllMarkets","expandAllMarkets","availableMarketKeys","expandedState","half","ceil","leftMarkets","rightMarkets","index","riskAssessment","LockedOdds","toFixed","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","controls","videoDisplayControl","videoRef","useRef","now","setNow","startTs","useMemo","t","parse","Number","isFinite","shouldDisplayVideo","isReadyToPlay","setInterval","clearInterval","current","play","e","tryPlay","remainingMs","max","remainingSec","floor","hh","String","padStart","mm","ss","width","maxWidth","ref","playsInline","height","background","display","flexDirection","alignItems","justifyContent","aspectRatio","position","alt","inset","objectFit","opacity","zIndex","textAlign","fontSize","marginBottom","fontWeight","letterSpacing","keyRaw","trim","base","MARKET_TITLE_MAP","winner","spreads","totals","outrights","outrights_lay","h2h_h1","h2h_h2","h2h_p1","h2h_p2","h2h_p3","h2h_3_way_q1","h2h_3_way_q2","h2h_3_way_q3","h2h_3_way_q4","h2h_3_way_h1","h2h_3_way_h2","h2h_3_way_p1","h2h_3_way_p2","h2h_3_way_p3","h2h_1st_1_innings","h2h_1st_3_innings","h2h_1st_5_innings","h2h_1st_7_innings","h2h_3_way_1st_1_innings","h2h_3_way_1st_3_innings","h2h_3_way_1st_5_innings","h2h_3_way_1st_7_innings","spreads_q1","spreads_q2","spreads_q3","spreads_q4","spreads_h1","spreads_h2","spreads_p1","spreads_p2","spreads_p3","spreads_1st_1_innings","spreads_1st_3_innings","spreads_1st_5_innings","spreads_1st_7_innings","alternate_spreads_1st_1_innings","alternate_spreads_1st_3_innings","alternate_spreads_1st_5_innings","alternate_spreads_1st_7_innings","alternate_spreads_q1","alternate_spreads_q2","alternate_spreads_q3","alternate_spreads_q4","alternate_spreads_h1","alternate_spreads_h2","alternate_spreads_p1","alternate_spreads_p2","alternate_spreads_p3","totals_q1","totals_q2","totals_q3","totals_q4","totals_h1","totals_h2","totals_p1","totals_p2","totals_p3","totals_1st_1_innings","totals_1st_3_innings","totals_1st_5_innings","totals_1st_7_innings","alternate_totals_1st_1_innings","alternate_totals_1st_3_innings","alternate_totals_1st_5_innings","alternate_totals_1st_7_innings","alternate_totals_q1","alternate_totals_q2","alternate_totals_q3","alternate_totals_q4","alternate_totals_h1","alternate_totals_h2","alternate_totals_p1","alternate_totals_p2","alternate_totals_p3","team_totals_h1","team_totals_h2","team_totals_q1","team_totals_q2","team_totals_q3","team_totals_q4","team_totals_p1","team_totals_p2","team_totals_p3","alternate_team_totals_h1","alternate_team_totals_h2","alternate_team_totals_q1","alternate_team_totals_q2","alternate_team_totals_q3","alternate_team_totals_q4","alternate_team_totals_p1","alternate_team_totals_p2","alternate_team_totals_p3","player_assists","player_defensive_interceptions","player_field_goals","player_kicking_points","player_pass_attempts","player_pass_completions","player_pass_interceptions","player_pass_longest_completion","player_pass_rush_yds","player_pass_rush_reception_tds","player_pass_rush_reception_yds","player_pass_tds","player_pass_yds","player_pass_yds_q1","player_pats","player_receptions","player_reception_longest","player_reception_tds","player_reception_yds","player_rush_attempts","player_rush_longest","player_rush_reception_tds","player_rush_reception_yds","player_rush_tds","player_rush_yds","player_sacks","player_solo_tackles","player_tackles_assists","player_tds_over","player_1st_td","player_anytime_td","player_last_td","assign","player_field_goals_alternate","player_kicking_points_alternate","player_pass_attempts_alternate","player_pass_completions_alternate","player_pass_interceptions_alternate","player_pass_longest_completion_alternate","player_pass_rush_yds_alternate","player_pass_rush_reception_tds_alternate","player_pass_rush_reception_yds_alternate","player_pass_tds_alternate","player_pass_yds_alternate","player_pats_alternate","player_receptions_alternate","player_reception_longest_alternate","player_reception_tds_alternate","player_reception_yds_alternate","player_rush_attempts_alternate","player_rush_longest_alternate","player_rush_reception_tds_alternate","player_rush_reception_yds_alternate","player_rush_tds_alternate","player_rush_yds_alternate","player_sacks_alternate","player_solo_tackles_alternate","player_tackles_assists_alternate","player_points","player_points_q1","player_rebounds","player_rebounds_q1","player_assists_q1","player_threes","player_blocks","player_steals","player_blocks_steals","player_turnovers","player_points_rebounds_assists","player_points_rebounds","player_points_assists","player_rebounds_assists","player_frees_made","player_frees_attempts","player_first_basket","player_first_team_basket","player_double_double","player_triple_double","player_method_of_first_basket","player_points_alternate","player_rebounds_alternate","player_assists_alternate","player_blocks_alternate","player_steals_alternate","player_turnovers_alternate","player_threes_alternate","player_points_assists_alternate","player_points_rebounds_alternate","player_rebounds_assists_alternate","player_points_rebounds_assists_alternate","batter_home_runs","batter_first_home_run","batter_hits","batter_total_bases","batter_rbis","batter_runs_scored","batter_hits_runs_rbis","batter_singles","batter_doubles","batter_triples","batter_walks","batter_strikeouts","batter_stolen_bases","pitcher_strikeouts","pitcher_record_a_win","pitcher_hits_allowed","pitcher_walks","pitcher_earned_runs","pitcher_outs","batter_total_bases_alternate","batter_home_runs_alternate","batter_hits_alternate","batter_rbis_alternate","batter_walks_alternate","batter_strikeouts_alternate","batter_runs_scored_alternate","batter_singles_alternate","batter_doubles_alternate","batter_triples_alternate","pitcher_hits_allowed_alternate","pitcher_walks_alternate","pitcher_strikeouts_alternate","player_power_play_points","player_blocked_shots","player_shots_on_goal","player_goals","player_total_saves","player_goal_scorer_first","player_goal_scorer_last","player_goal_scorer_anytime","player_power_play_points_alternate","player_goals_alternate","player_shots_on_goal_alternate","player_blocked_shots_alternate","player_total_saves_alternate","player_disposals","player_disposals_over","player_goals_scored_over","player_marks_over","player_marks_most","player_tackles_over","player_tackles_most","player_afl_fantasy_points","player_afl_fantasy_points_over","player_afl_fantasy_points_most","player_try_scorer_first","player_try_scorer_last","player_try_scorer_anytime","player_try_scorer_over","player_to_receive_card","player_to_receive_red_card","player_shots_on_target","player_shots","alternate_spreads_corners","alternate_totals_corners","alternate_spreads_cards","alternate_totals_cards","double_chance","norm","l"],"sourceRoot":""}