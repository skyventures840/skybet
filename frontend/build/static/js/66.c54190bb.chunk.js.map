{"version":3,"file":"static/js/66.c54190bb.chunk.js","mappings":"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","sources":["pages/Login.js"],"sourcesContent":["// Add this import at the top\nimport { loginStart, loginSuccess, loginFailure } from '../store/slices/authSlice'; // adjust path if needed\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport apiService from '../services/api';\n\n\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n\n  // Update the handleSubmit function\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      setLoading(true);\n      dispatch(loginStart());\n      \n      console.log('[DEBUG] Login attempt with email:', email);\n      \n      try {\n          const response = await apiService.login({ email, password });\n          console.log('[DEBUG] Login response:', response.data);\n          \n          const { token, user } = response.data;\n          dispatch(loginSuccess({ token, user }));\n          localStorage.setItem('user', JSON.stringify({ token, user }));\n  \n          if (response.data.user && response.data.user.isAdmin) {\n            navigate('/admin');\n          } else {\n            navigate('/');\n          }\n      } catch (error) {\n          console.error('[DEBUG] Login error details:', {\n              message: error.message,\n              response: error.response?.data,\n              status: error.response?.status,\n              headers: error.response?.headers\n          });\n          \n          if (error.response) {\n              const errorMessage = error.response.data.message || 'Server error occurred';\n              dispatch(loginFailure(errorMessage));\n              setError(errorMessage);\n          } else if (error.request) {\n              const errorMessage = 'No response from server. Please check your connection.';\n              dispatch(loginFailure(errorMessage));\n              setError(errorMessage);\n          } else {\n              const errorMessage = 'An error occurred. Please try again.';\n              dispatch(loginFailure(errorMessage));\n              setError(errorMessage);\n          }\n      } finally {\n          setLoading(false);\n      }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-form\">\n        <div className=\"auth-header\">\n          <h1 className=\"auth-title\">Log In</h1>\n          <p className=\"auth-subtitle\">Welcome back to skybet</p>\n        </div>\n\n        {error && <div className=\"error\">{error}</div>}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email Address</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n\n          <button \n            type=\"submit\" \n            className=\"btn-primary full-width\"\n            disabled={loading}\n          >\n            {loading ? 'Logging in...' : 'Log In'}\n          </button>\n        </form>\n\n        <div className=\"auth-footer\">\n          <p>\n            Don't have an account?{' '}\n            <Link to=\"/signup\" className=\"auth-link\">\n              Sign up here\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"names":["Login","email","setEmail","useState","password","setPassword","error","setError","loading","setLoading","navigate","useNavigate","dispatch","useDispatch","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","loginStart","console","log","response","apiService","login","data","token","user","loginSuccess","localStorage","setItem","JSON","stringify","isAdmin","_error$response","_error$response2","_error$response3","message","status","headers","errorMessage","loginFailure","request","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","Link","to"],"sourceRoot":""}